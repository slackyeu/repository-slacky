#!/bin/sh

# Heavily based on the Slackware 14.1 SlackBuild

# Written by Loris Vincenzi (slacky@slacky.it)
# Last build from Loris Vincenzi (slacky@slacky.it)

# Slackware build script for live555
# Official Site: http://www.live555.com
# Patches from ...

# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ''AS IS'' AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO
# EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
# Requirements:

set -e

NAME=live
PKGNAME=live555
VERSION=${VERSION:-2013.12.21}
ARCH=${ARCH:-$(uname -m)}
BUILD=${BUILD:-1}
TAG=${TAG:-sl}
SOURCE="http://www.live555.com/liveMedia/public/$NAME.$VERSION.tar.gz"
TAR=
DIR=$NAME
DOCS="COPYING README"
SLKFILES=""

case "$ARCH" in
	  i?86) export ARCH=i486; SLKCFLAGS="-O2 -march=i486 -mtune=i686"; CHOST="i486-slackware-linux" ;;
	x86_64) SLKCFLAGS="-O2 -fPIC"; LIBDIRSUFFIX="64"; CHOST="x86_64-slackware-linux" ;;
	  arm*) export ARCH=arm; SLKCFLAGS="-O2 -march=armv5te"; CHOST="arm-slackware-linux-gnueabi" ;;
		 *) export ARCH=$( uname -m ) ;;
esac

JOBS=${JOBS:--j2}
CWD=$(pwd)
TMP=${TMP:-/tmp/buildpkgs/$PKGNAME}
PKG=$TMP/package-$PKGNAME
OUTPUT=${OUTPUT:-$CWD}
TAR=${TAR:-$(basename $SOURCE)}
DIR=${DIR:-$(echo "$TAR"|sed -r 's/(\.tar|)(.gz|.bz2|.xz|.tgz|)$//')}

if [ ! -e $CWD/$TAR ];then
	wget $SOURCE -O "$CWD/$TAR"
fi

rm -rf $TMP
mkdir -p $TMP $PKG $OUTPUT
cd $TMP
tar xvf $CWD/$TAR
cd $DIR

./genMakefiles linux
make $JOBS

chown -R root:root .
chmod -R u+w,go+r-w,a-s .

mkdir -p $PKG/usr/bin
mkdir -p $PKG/usr/lib${LIBDIRSUFFIX}/live/BasicUsageEnvironment/include
mkdir -p $PKG/usr/lib${LIBDIRSUFFIX}/live/UsageEnvironment/include
mkdir -p $PKG/usr/lib${LIBDIRSUFFIX}/live/groupsock/include
mkdir -p $PKG/usr/lib${LIBDIRSUFFIX}/live/liveMedia/include

find  $TMP/$NAME/testProgs/ -perm -755    -exec cp  {} /$PKG/usr/bin \;
find  $TMP/$NAME/mediaServer/ -perm -755    -exec cp  {} /$PKG/usr/bin \;
rm    $PKG/usr/bin/COPYING
find  $TMP/$NAME/BasicUsageEnvironment/*.a -exec cp  {} $PKG/usr/lib${LIBDIRSUFFIX}/live/BasicUsageEnvironment/ \;
cp -a $TMP/$NAME/BasicUsageEnvironment/include/*.h*     $PKG/usr/lib${LIBDIRSUFFIX}/live/BasicUsageEnvironment/include

find  $TMP/$NAME/UsageEnvironment/*.a      -exec cp  {} $PKG/usr/lib${LIBDIRSUFFIX}/live/UsageEnvironment/ \;
cp -a $TMP/$NAME/UsageEnvironment/include/*.h*      $PKG/usr/lib${LIBDIRSUFFIX}/live/UsageEnvironment/include

find  $TMP/$NAME/groupsock/*.a             -exec cp  {} $PKG/usr/lib${LIBDIRSUFFIX}/live/groupsock/ \;
cp -a $TMP/$NAME/groupsock/include/*.h*                 $PKG/usr/lib${LIBDIRSUFFIX}/live/groupsock/include

find  $TMP/$NAME/liveMedia/*.a             -exec cp  {} $PKG/usr/lib${LIBDIRSUFFIX}/live/liveMedia/ \;
cp -a $TMP/$NAME/liveMedia/include/*.h*                 $PKG/usr/lib${LIBDIRSUFFIX}/live/liveMedia/include

mkdir -p $PKG/usr/doc/$PKGNAME-$VERSION

for DC in $DOCS;do
	[ -e $DC ] && cp -r $DC $PKG/usr/doc/$PKGNAME-$VERSION/ || true
done

mkdir -p $PKG/usr/doc/$PKGNAME-$VERSION/SlackBuild

cd $CWD
for SB in $PKGNAME.SlackBuild slack-desc doinst.sh doinst.sh.gz EULA.TXT $SLKFILES;do
	[ -e "$SB" ] && cp -r $SB $PKG/usr/doc/$PKGNAME-$VERSION/SlackBuild/$SB || true
done

for i in man info
do
    if [ -d $PKG/usr/$i ]; then
   		cd $PKG/usr/$i
		find . -type f -exec gzip -9 {} \;
		for file in $( find . -type l ) ; do ln -s $( readlink $file ).gz $file.gz ; rm $file ; done
		[ "$i" == "info" ] && rm -f dir
    fi
done
	
cd $PKG
find . | xargs file | grep "executable" | grep ELF | cut -f 1 -d : | xargs -r strip --strip-unneeded 2> /dev/null || true
find . | xargs file | grep "shared object" | grep ELF | cut -f 1 -d : | xargs -r strip --strip-unneeded 2> /dev/null || true
find . | xargs file | grep "current ar archive" | cut -f 1 -d : | xargs -r strip --strip-unneeded 2> /dev/null || true

mkdir -p $PKG/install

cat << EOF > $PKG/install/doinst.sh
( cd usr/include ; rm -rf BasicUsageEnvironment )
( cd usr/include ; ln -sf /usr/lib${LIBDIRSUFFIX}/live/BasicUsageEnvironment/include   BasicUsageEnvironment )
( cd usr/include ; rm -rf UsageEnvironment )
( cd usr/include ; ln -sf /usr/lib${LIBDIRSUFFIX}/live/UsageEnvironment/include   UsageEnvironment )
( cd usr/include ; rm -rf groupsock )
( cd usr/include ; ln -sf /usr/lib${LIBDIRSUFFIX}/live/groupsock/include   groupsock )
( cd usr/include ; rm -rf liveMedia )
( cd usr/include ; ln -sf /usr/lib${LIBDIRSUFFIX}/live/liveMedia/include   liveMedia )
EOF

cat $CWD/slack-desc > $PKG/install/slack-desc
[ -e $CWD/doinst.sh ] && cat $CWD/doinst.sh > $PKG/install/doinst.sh
[ -e $CWD/doinst.sh.gz ] && zcat $CWD/doinst.sh.gz > $PKG/install/doinst.sh

cd $PKG
chown -R root:root $PKG

if [ -x "$(which requiredbuilder 2>/dev/null)" ];then
	requiredbuilder -y -v -s $CWD $PKG # add "-c -b" if you have binary files in /usr/share
	[ -e install/slack-required ] && cat install/slack-required > $PKG/usr/doc/$PKGNAME-$VERSION/SlackBuild/slack-required
fi

/sbin/makepkg -l y -c n $OUTPUT/$PKGNAME-$VERSION-$ARCH-$BUILD$TAG.${PKGTYPE:-txz}

if [ "$1" = "--cleanup" ]; then
	rm -rf $TMP
fi
