# format=tagmanager
# tags for DBus 1.2.4 and dbus-glib 0.76
DBUS_ADDRESS_HÌ65536Ö0
DBUS_BEGIN_DECLSÌ65536Ö0
DBUS_BIG_ENDIANÌ65536Ö0
DBUS_BUS_HÌ65536Ö0
DBUS_BUS_SESSIONÌ4Îanon_enum_0Ö0
DBUS_BUS_STARTERÌ4Îanon_enum_0Ö0
DBUS_BUS_SYSTEMÌ4Îanon_enum_0Ö0
DBUS_CONNECTION_HÌ65536Ö0
DBUS_DEPRECATEDÌ65536Ö0
DBUS_DICT_ENTRY_BEGIN_CHARÌ65536Ö0
DBUS_DICT_ENTRY_BEGIN_CHAR_AS_STRINGÌ65536Ö0
DBUS_DICT_ENTRY_END_CHARÌ65536Ö0
DBUS_DICT_ENTRY_END_CHAR_AS_STRINGÌ65536Ö0
DBUS_DISPATCH_COMPLETEÌ4Îanon_enum_3Ö0
DBUS_DISPATCH_DATA_REMAINSÌ4Îanon_enum_3Ö0
DBUS_DISPATCH_NEED_MEMORYÌ4Îanon_enum_3Ö0
DBUS_END_DECLSÌ65536Ö0
DBUS_ERROR_ACCESS_DENIEDÌ65536Ö0
DBUS_ERROR_ADDRESS_IN_USEÌ65536Ö0
DBUS_ERROR_ADT_AUDIT_DATA_UNKNOWNÌ65536Ö0
DBUS_ERROR_AUTH_FAILEDÌ65536Ö0
DBUS_ERROR_BAD_ADDRESSÌ65536Ö0
DBUS_ERROR_DISCONNECTEDÌ65536Ö0
DBUS_ERROR_FAILEDÌ65536Ö0
DBUS_ERROR_FILE_EXISTSÌ65536Ö0
DBUS_ERROR_FILE_NOT_FOUNDÌ65536Ö0
DBUS_ERROR_HÌ65536Ö0
DBUS_ERROR_INITÌ65536Ö0
DBUS_ERROR_INVALID_ARGSÌ65536Ö0
DBUS_ERROR_INVALID_FILE_CONTENTÌ65536Ö0
DBUS_ERROR_INVALID_SIGNATUREÌ65536Ö0
DBUS_ERROR_IO_ERRORÌ65536Ö0
DBUS_ERROR_LIMITS_EXCEEDEDÌ65536Ö0
DBUS_ERROR_MATCH_RULE_INVALIDÌ65536Ö0
DBUS_ERROR_MATCH_RULE_NOT_FOUNDÌ65536Ö0
DBUS_ERROR_NAME_HAS_NO_OWNERÌ65536Ö0
DBUS_ERROR_NOT_SUPPORTEDÌ65536Ö0
DBUS_ERROR_NO_MEMORYÌ65536Ö0
DBUS_ERROR_NO_NETWORKÌ65536Ö0
DBUS_ERROR_NO_REPLYÌ65536Ö0
DBUS_ERROR_NO_SERVERÌ65536Ö0
DBUS_ERROR_OBJECT_PATH_IN_USEÌ65536Ö0
DBUS_ERROR_SELINUX_SECURITY_CONTEXT_UNKNOWNÌ65536Ö0
DBUS_ERROR_SERVICE_UNKNOWNÌ65536Ö0
DBUS_ERROR_SPAWN_CHILD_EXITEDÌ65536Ö0
DBUS_ERROR_SPAWN_CHILD_SIGNALEDÌ65536Ö0
DBUS_ERROR_SPAWN_CONFIG_INVALIDÌ65536Ö0
DBUS_ERROR_SPAWN_EXEC_FAILEDÌ65536Ö0
DBUS_ERROR_SPAWN_FAILEDÌ65536Ö0
DBUS_ERROR_SPAWN_FILE_INVALIDÌ65536Ö0
DBUS_ERROR_SPAWN_FORK_FAILEDÌ65536Ö0
DBUS_ERROR_SPAWN_NO_MEMORYÌ65536Ö0
DBUS_ERROR_SPAWN_PERMISSIONS_INVALIDÌ65536Ö0
DBUS_ERROR_SPAWN_SERVICE_INVALIDÌ65536Ö0
DBUS_ERROR_SPAWN_SERVICE_NOT_FOUNDÌ65536Ö0
DBUS_ERROR_SPAWN_SETUP_FAILEDÌ65536Ö0
DBUS_ERROR_TIMED_OUTÌ65536Ö0
DBUS_ERROR_TIMEOUTÌ65536Ö0
DBUS_ERROR_UNIX_PROCESS_ID_UNKNOWNÌ65536Ö0
DBUS_ERROR_UNKNOWN_METHODÌ65536Ö0
DBUS_HÌ65536Ö0
DBUS_HANDLER_RESULT_HANDLEDÌ4Îanon_enum_1Ö0
DBUS_HANDLER_RESULT_NEED_MEMORYÌ4Îanon_enum_1Ö0
DBUS_HANDLER_RESULT_NOT_YET_HANDLEDÌ4Îanon_enum_1Ö0
DBUS_HEADER_FIELD_DESTINATIONÌ65536Ö0
DBUS_HEADER_FIELD_ERROR_NAMEÌ65536Ö0
DBUS_HEADER_FIELD_INTERFACEÌ65536Ö0
DBUS_HEADER_FIELD_INVALIDÌ65536Ö0
DBUS_HEADER_FIELD_LASTÌ65536Ö0
DBUS_HEADER_FIELD_MEMBERÌ65536Ö0
DBUS_HEADER_FIELD_PATHÌ65536Ö0
DBUS_HEADER_FIELD_REPLY_SERIALÌ65536Ö0
DBUS_HEADER_FIELD_SENDERÌ65536Ö0
DBUS_HEADER_FIELD_SIGNATUREÌ65536Ö0
DBUS_HEADER_FLAG_NO_AUTO_STARTÌ65536Ö0
DBUS_HEADER_FLAG_NO_REPLY_EXPECTEDÌ65536Ö0
DBUS_HEADER_SIGNATUREÌ65536Ö0
DBUS_INSIDE_DBUS_HÌ65536Ö0
DBUS_INTERFACE_DBUSÌ65536Ö0
DBUS_INTERFACE_INTROSPECTABLEÌ65536Ö0
DBUS_INTERFACE_LOCALÌ65536Ö0
DBUS_INTERFACE_PEERÌ65536Ö0
DBUS_INTERFACE_PROPERTIESÌ65536Ö0
DBUS_INTROSPECT_1_0_XML_DOCTYPE_DECL_NODEÌ65536Ö0
DBUS_INTROSPECT_1_0_XML_NAMESPACEÌ65536Ö0
DBUS_INTROSPECT_1_0_XML_PUBLIC_IDENTIFIERÌ65536Ö0
DBUS_INTROSPECT_1_0_XML_SYSTEM_IDENTIFIERÌ65536Ö0
DBUS_LITTLE_ENDIANÌ65536Ö0
DBUS_MACROS_HÌ65536Ö0
DBUS_MAJOR_PROTOCOL_VERSIONÌ65536Ö0
DBUS_MAXIMUM_ARRAY_LENGTHÌ65536Ö0
DBUS_MAXIMUM_ARRAY_LENGTH_BITSÌ65536Ö0
DBUS_MAXIMUM_MATCH_RULE_ARG_NUMBERÌ65536Ö0
DBUS_MAXIMUM_MATCH_RULE_LENGTHÌ65536Ö0
DBUS_MAXIMUM_MESSAGE_LENGTHÌ65536Ö0
DBUS_MAXIMUM_MESSAGE_LENGTH_BITSÌ65536Ö0
DBUS_MAXIMUM_NAME_LENGTHÌ65536Ö0
DBUS_MAXIMUM_SIGNATURE_LENGTHÌ65536Ö0
DBUS_MAXIMUM_TYPE_RECURSION_DEPTHÌ65536Ö0
DBUS_MEMORY_HÌ65536Ö0
DBUS_MESSAGE_HÌ65536Ö0
DBUS_MESSAGE_TYPE_ERRORÌ65536Ö0
DBUS_MESSAGE_TYPE_INVALIDÌ65536Ö0
DBUS_MESSAGE_TYPE_METHOD_CALLÌ65536Ö0
DBUS_MESSAGE_TYPE_METHOD_RETURNÌ65536Ö0
DBUS_MESSAGE_TYPE_SIGNALÌ65536Ö0
DBUS_MINIMUM_HEADER_SIZEÌ65536Ö0
DBUS_MISC_HÌ65536Ö0
DBUS_NAME_FLAG_ALLOW_REPLACEMENTÌ65536Ö0
DBUS_NAME_FLAG_DO_NOT_QUEUEÌ65536Ö0
DBUS_NAME_FLAG_REPLACE_EXISTINGÌ65536Ö0
DBUS_NUMBER_OF_TYPESÌ65536Ö0
DBUS_PATH_DBUSÌ65536Ö0
DBUS_PATH_LOCALÌ65536Ö0
DBUS_PENDING_CALL_HÌ65536Ö0
DBUS_PROTOCOL_HÌ65536Ö0
DBUS_RELEASE_NAME_REPLY_NON_EXISTENTÌ65536Ö0
DBUS_RELEASE_NAME_REPLY_NOT_OWNERÌ65536Ö0
DBUS_RELEASE_NAME_REPLY_RELEASEDÌ65536Ö0
DBUS_REQUEST_NAME_REPLY_ALREADY_OWNERÌ65536Ö0
DBUS_REQUEST_NAME_REPLY_EXISTSÌ65536Ö0
DBUS_REQUEST_NAME_REPLY_IN_QUEUEÌ65536Ö0
DBUS_REQUEST_NAME_REPLY_PRIMARY_OWNERÌ65536Ö0
DBUS_SERVER_HÌ65536Ö0
DBUS_SERVICE_DBUSÌ65536Ö0
DBUS_SHARED_HÌ65536Ö0
DBUS_SIGNATURES_HÌ65536Ö0
DBUS_START_REPLY_ALREADY_RUNNINGÌ65536Ö0
DBUS_START_REPLY_SUCCESSÌ65536Ö0
DBUS_STRUCT_BEGIN_CHARÌ65536Ö0
DBUS_STRUCT_BEGIN_CHAR_AS_STRINGÌ65536Ö0
DBUS_STRUCT_END_CHARÌ65536Ö0
DBUS_STRUCT_END_CHAR_AS_STRINGÌ65536Ö0
DBUS_THREADS_HÌ65536Ö0
DBUS_THREAD_FUNCTIONS_ALL_MASKÌ4Îanon_enum_5Ö0
DBUS_THREAD_FUNCTIONS_CONDVAR_FREE_MASKÌ4Îanon_enum_5Ö0
DBUS_THREAD_FUNCTIONS_CONDVAR_NEW_MASKÌ4Îanon_enum_5Ö0
DBUS_THREAD_FUNCTIONS_CONDVAR_WAIT_MASKÌ4Îanon_enum_5Ö0
DBUS_THREAD_FUNCTIONS_CONDVAR_WAIT_TIMEOUT_MASKÌ4Îanon_enum_5Ö0
DBUS_THREAD_FUNCTIONS_CONDVAR_WAKE_ALL_MASKÌ4Îanon_enum_5Ö0
DBUS_THREAD_FUNCTIONS_CONDVAR_WAKE_ONE_MASKÌ4Îanon_enum_5Ö0
DBUS_THREAD_FUNCTIONS_MUTEX_FREE_MASKÌ4Îanon_enum_5Ö0
DBUS_THREAD_FUNCTIONS_MUTEX_LOCK_MASKÌ4Îanon_enum_5Ö0
DBUS_THREAD_FUNCTIONS_MUTEX_NEW_MASKÌ4Îanon_enum_5Ö0
DBUS_THREAD_FUNCTIONS_MUTEX_UNLOCK_MASKÌ4Îanon_enum_5Ö0
DBUS_THREAD_FUNCTIONS_RECURSIVE_MUTEX_FREE_MASKÌ4Îanon_enum_5Ö0
DBUS_THREAD_FUNCTIONS_RECURSIVE_MUTEX_LOCK_MASKÌ4Îanon_enum_5Ö0
DBUS_THREAD_FUNCTIONS_RECURSIVE_MUTEX_NEW_MASKÌ4Îanon_enum_5Ö0
DBUS_THREAD_FUNCTIONS_RECURSIVE_MUTEX_UNLOCK_MASKÌ4Îanon_enum_5Ö0
DBUS_TYPES_HÌ65536Ö0
DBUS_TYPE_ARRAYÌ65536Ö0
DBUS_TYPE_ARRAY_AS_STRINGÌ65536Ö0
DBUS_TYPE_BOOLEANÌ65536Ö0
DBUS_TYPE_BOOLEAN_AS_STRINGÌ65536Ö0
DBUS_TYPE_BYTEÌ65536Ö0
DBUS_TYPE_BYTE_AS_STRINGÌ65536Ö0
DBUS_TYPE_DICT_ENTRYÌ65536Ö0
DBUS_TYPE_DICT_ENTRY_AS_STRINGÌ65536Ö0
DBUS_TYPE_DOUBLEÌ65536Ö0
DBUS_TYPE_DOUBLE_AS_STRINGÌ65536Ö0
DBUS_TYPE_INT16Ì65536Ö0
DBUS_TYPE_INT16_AS_STRINGÌ65536Ö0
DBUS_TYPE_INT32Ì65536Ö0
DBUS_TYPE_INT32_AS_STRINGÌ65536Ö0
DBUS_TYPE_INT64Ì65536Ö0
DBUS_TYPE_INT64_AS_STRINGÌ65536Ö0
DBUS_TYPE_INVALIDÌ65536Ö0
DBUS_TYPE_INVALID_AS_STRINGÌ65536Ö0
DBUS_TYPE_OBJECT_PATHÌ65536Ö0
DBUS_TYPE_OBJECT_PATH_AS_STRINGÌ65536Ö0
DBUS_TYPE_SIGNATUREÌ65536Ö0
DBUS_TYPE_SIGNATURE_AS_STRINGÌ65536Ö0
DBUS_TYPE_STRINGÌ65536Ö0
DBUS_TYPE_STRING_AS_STRINGÌ65536Ö0
DBUS_TYPE_STRUCTÌ65536Ö0
DBUS_TYPE_STRUCT_AS_STRINGÌ65536Ö0
DBUS_TYPE_UINT16Ì65536Ö0
DBUS_TYPE_UINT16_AS_STRINGÌ65536Ö0
DBUS_TYPE_UINT32Ì65536Ö0
DBUS_TYPE_UINT32_AS_STRINGÌ65536Ö0
DBUS_TYPE_UINT64Ì65536Ö0
DBUS_TYPE_UINT64_AS_STRINGÌ65536Ö0
DBUS_TYPE_VARIANTÌ65536Ö0
DBUS_TYPE_VARIANT_AS_STRINGÌ65536Ö0
DBUS_WATCH_ERRORÌ4Îanon_enum_2Ö0
DBUS_WATCH_HANGUPÌ4Îanon_enum_2Ö0
DBUS_WATCH_READABLEÌ4Îanon_enum_2Ö0
DBUS_WATCH_WRITABLEÌ4Îanon_enum_2Ö0
DBusAddTimeoutFunctionÌ4096Ö0Ïtypedef dbus_bool_t
DBusAddWatchFunctionÌ4096Ö0Ïtypedef dbus_bool_t
DBusAddressEntryÌ4096Ö0
DBusAllowUnixUserFunctionÌ4096Ö0Ïtypedef dbus_bool_t
DBusAllowWindowsUserFunctionÌ4096Ö0Ïtypedef dbus_bool_t
DBusBusTypeÌ4096Ö0Ïanon_enum_0
DBusCondVarÌ4096Ö0
DBusCondVarFreeFunctionÌ4096Ö0Ïtypedef void
DBusCondVarNewFunctionÌ4096Ö0Ïtypedef DBusCondVar *
DBusCondVarWaitFunctionÌ4096Ö0Ïtypedef void
DBusCondVarWaitTimeoutFunctionÌ4096Ö0Ïtypedef dbus_bool_t
DBusCondVarWakeAllFunctionÌ4096Ö0Ïtypedef void
DBusCondVarWakeOneFunctionÌ4096Ö0Ïtypedef void
DBusConnectionÌ4096Ö0
DBusDispatchStatusÌ4096Ö0Ïanon_enum_3
DBusDispatchStatusFunctionÌ4096Ö0Ïtypedef void
DBusErrorÌ4096Ö0
DBusFreeFunctionÌ4096Ö0Ïtypedef void
DBusHandleMessageFunctionÌ4096Ö0Ïtypedef DBusHandlerResult
DBusHandlerResultÌ4096Ö0Ïanon_enum_1
DBusMessageÌ4096Ö0
DBusMessageIterÌ4096Ö0
DBusMutexÌ4096Ö0
DBusMutexFreeFunctionÌ4096Ö0Ïtypedef void
DBusMutexLockFunctionÌ4096Ö0Ïtypedef dbus_bool_t
DBusMutexNewFunctionÌ4096Ö0Ïtypedef DBusMutex *
DBusMutexUnlockFunctionÌ4096Ö0Ïtypedef dbus_bool_t
DBusNewConnectionFunctionÌ4096Ö0Ïtypedef void
DBusObjectPathMessageFunctionÌ4096Ö0Ïtypedef DBusHandlerResult
DBusObjectPathUnregisterFunctionÌ4096Ö0Ïtypedef void
DBusObjectPathVTableÌ4096Ö0
DBusPendingCallÌ4096Ö0
DBusPendingCallNotifyFunctionÌ4096Ö0Ïtypedef void
DBusPreallocatedSendÌ4096Ö0
DBusRecursiveMutexFreeFunctionÌ4096Ö0Ïtypedef void
DBusRecursiveMutexLockFunctionÌ4096Ö0Ïtypedef void
DBusRecursiveMutexNewFunctionÌ4096Ö0Ïtypedef DBusMutex *
DBusRecursiveMutexUnlockFunctionÌ4096Ö0Ïtypedef void
DBusRemoveTimeoutFunctionÌ4096Ö0Ïtypedef void
DBusRemoveWatchFunctionÌ4096Ö0Ïtypedef void
DBusServerÌ4096Ö0
DBusSignatureIterÌ4096Ö0Ïanon_struct_4
DBusThreadFunctionsÌ4096Ö0Ïanon_struct_6
DBusThreadFunctionsMaskÌ4096Ö0Ïanon_enum_5
DBusTimeoutÌ4096Ö0
DBusTimeoutToggledFunctionÌ4096Ö0Ïtypedef void
DBusWakeupMainFunctionÌ4096Ö0Ïtypedef void
DBusWatchÌ4096Ö0
DBusWatchFlagsÌ4096Ö0Ïanon_enum_2
DBusWatchToggledFunctionÌ4096Ö0Ïtypedef void
dbus_address_entries_freeÌ1024Í(DBusAddressEntry **entries)Ö0Ïvoid
dbus_address_entry_get_methodÌ1024Í(DBusAddressEntry *entry)Ö0Ïconst char *
dbus_address_entry_get_valueÌ1024Í(DBusAddressEntry *entry, const char *key)Ö0Ïconst char *
dbus_address_escape_valueÌ1024Í(const char *value)Ö0Ïchar *
dbus_address_unescape_valueÌ1024Í(const char *value, DBusError *error)Ö0Ïchar *
dbus_bool_tÌ4096Ö0Ïdbus_uint32_t
dbus_bus_add_matchÌ1024Í(DBusConnection *connection, const char *rule, DBusError *error)Ö0Ïvoid
dbus_bus_getÌ1024Í(DBusBusType type, DBusError *error)Ö0ÏDBusConnection *
dbus_bus_get_idÌ1024Í(DBusConnection *connection, DBusError *error)Ö0Ïchar *
dbus_bus_get_privateÌ1024Í(DBusBusType type, DBusError *error)Ö0ÏDBusConnection *
dbus_bus_get_unique_nameÌ1024Í(DBusConnection *connection)Ö0Ïconst char *
dbus_bus_get_unix_userÌ1024Í(DBusConnection *connection, const char *name, DBusError *error)Ö0Ïunsigned long
dbus_bus_name_has_ownerÌ1024Í(DBusConnection *connection, const char *name, DBusError *error)Ö0Ïdbus_bool_t
dbus_bus_registerÌ1024Í(DBusConnection *connection, DBusError *error)Ö0Ïdbus_bool_t
dbus_bus_release_nameÌ1024Í(DBusConnection *connection, const char *name, DBusError *error)Ö0Ïint
dbus_bus_remove_matchÌ1024Í(DBusConnection *connection, const char *rule, DBusError *error)Ö0Ïvoid
dbus_bus_request_nameÌ1024Í(DBusConnection *connection, const char *name, unsigned int flags, DBusError *error)Ö0Ïint
dbus_bus_set_unique_nameÌ1024Í(DBusConnection *connection, const char *unique_name)Ö0Ïdbus_bool_t
dbus_bus_start_service_by_nameÌ1024Í(DBusConnection *connection, const char *name, dbus_uint32_t flags, dbus_uint32_t *reply, DBusError *error)Ö0Ïdbus_bool_t
dbus_connection_add_filterÌ1024Í(DBusConnection *connection, DBusHandleMessageFunction function, void *user_data, DBusFreeFunction free_data_function)Ö0Ïdbus_bool_t
dbus_connection_allocate_data_slotÌ1024Í(dbus_int32_t *slot_p)Ö0Ïdbus_bool_t
dbus_connection_borrow_messageÌ1024Í(DBusConnection *connection)Ö0ÏDBusMessage *
dbus_connection_closeÌ1024Í(DBusConnection *connection)Ö0Ïvoid
dbus_connection_dispatchÌ1024Í(DBusConnection *connection)Ö0ÏDBusDispatchStatus
dbus_connection_flushÌ1024Í(DBusConnection *connection)Ö0Ïvoid
dbus_connection_free_data_slotÌ1024Í(dbus_int32_t *slot_p)Ö0Ïvoid
dbus_connection_free_preallocated_sendÌ1024Í(DBusConnection *connection, DBusPreallocatedSend *preallocated)Ö0Ïvoid
dbus_connection_get_adt_audit_session_dataÌ1024Í(DBusConnection *connection, void **data, dbus_int32_t *data_size)Ö0Ïdbus_bool_t
dbus_connection_get_dataÌ1024Í(DBusConnection *connection, dbus_int32_t slot)Ö0Ïvoid *
dbus_connection_get_dispatch_statusÌ1024Í(DBusConnection *connection)Ö0ÏDBusDispatchStatus
dbus_connection_get_is_anonymousÌ1024Í(DBusConnection *connection)Ö0Ïdbus_bool_t
dbus_connection_get_is_authenticatedÌ1024Í(DBusConnection *connection)Ö0Ïdbus_bool_t
dbus_connection_get_is_connectedÌ1024Í(DBusConnection *connection)Ö0Ïdbus_bool_t
dbus_connection_get_max_message_sizeÌ1024Í(DBusConnection *connection)Ö0Ïlong
dbus_connection_get_max_received_sizeÌ1024Í(DBusConnection *connection)Ö0Ïlong
dbus_connection_get_object_path_dataÌ1024Í(DBusConnection *connection, const char *path, void **data_p)Ö0Ïdbus_bool_t
dbus_connection_get_outgoing_sizeÌ1024Í(DBusConnection *connection)Ö0Ïlong
dbus_connection_get_server_idÌ1024Í(DBusConnection *connection)Ö0Ïchar *
dbus_connection_get_socketÌ1024Í(DBusConnection *connection, int *fd)Ö0Ïdbus_bool_t
dbus_connection_get_unix_fdÌ1024Í(DBusConnection *connection, int *fd)Ö0Ïdbus_bool_t
dbus_connection_get_unix_process_idÌ1024Í(DBusConnection *connection, unsigned long *pid)Ö0Ïdbus_bool_t
dbus_connection_get_unix_userÌ1024Í(DBusConnection *connection, unsigned long *uid)Ö0Ïdbus_bool_t
dbus_connection_get_windows_userÌ1024Í(DBusConnection *connection, char **windows_sid_p)Ö0Ïdbus_bool_t
dbus_connection_has_messages_to_sendÌ1024Í(DBusConnection *connection)Ö0Ïdbus_bool_t
dbus_connection_list_registeredÌ1024Í(DBusConnection *connection, const char *parent_path, char ***child_entries)Ö0Ïdbus_bool_t
dbus_connection_openÌ1024Í(const char *address, DBusError *error)Ö0ÏDBusConnection *
dbus_connection_open_privateÌ1024Í(const char *address, DBusError *error)Ö0ÏDBusConnection *
dbus_connection_pop_messageÌ1024Í(DBusConnection *connection)Ö0ÏDBusMessage *
dbus_connection_preallocate_sendÌ1024Í(DBusConnection *connection)Ö0ÏDBusPreallocatedSend *
dbus_connection_read_writeÌ1024Í(DBusConnection *connection, int timeout_milliseconds)Ö0Ïdbus_bool_t
dbus_connection_read_write_dispatchÌ1024Í(DBusConnection *connection, int timeout_milliseconds)Ö0Ïdbus_bool_t
dbus_connection_refÌ1024Í(DBusConnection *connection)Ö0ÏDBusConnection *
dbus_connection_register_fallbackÌ1024Í(DBusConnection *connection, const char *path, const DBusObjectPathVTable *vtable, void *user_data)Ö0Ïdbus_bool_t
dbus_connection_register_object_pathÌ1024Í(DBusConnection *connection, const char *path, const DBusObjectPathVTable *vtable, void *user_data)Ö0Ïdbus_bool_t
dbus_connection_remove_filterÌ1024Í(DBusConnection *connection, DBusHandleMessageFunction function, void *user_data)Ö0Ïvoid
dbus_connection_return_messageÌ1024Í(DBusConnection *connection, DBusMessage *message)Ö0Ïvoid
dbus_connection_sendÌ1024Í(DBusConnection *connection, DBusMessage *message, dbus_uint32_t *client_serial)Ö0Ïdbus_bool_t
dbus_connection_send_preallocatedÌ1024Í(DBusConnection *connection, DBusPreallocatedSend *preallocated, DBusMessage *message, dbus_uint32_t *client_serial)Ö0Ïvoid
dbus_connection_send_with_replyÌ1024Í(DBusConnection *connection, DBusMessage *message, DBusPendingCall **pending_return, int timeout_milliseconds)Ö0Ïdbus_bool_t
dbus_connection_send_with_reply_and_blockÌ1024Í(DBusConnection *connection, DBusMessage *message, int timeout_milliseconds, DBusError *error)Ö0ÏDBusMessage *
dbus_connection_set_allow_anonymousÌ1024Í(DBusConnection *connection, dbus_bool_t value)Ö0Ïvoid
dbus_connection_set_change_sigpipeÌ1024Í(dbus_bool_t will_modify_sigpipe)Ö0Ïvoid
dbus_connection_set_dataÌ1024Í(DBusConnection *connection, dbus_int32_t slot, void *data, DBusFreeFunction free_data_func)Ö0Ïdbus_bool_t
dbus_connection_set_dispatch_status_functionÌ1024Í(DBusConnection *connection, DBusDispatchStatusFunction function, void *data, DBusFreeFunction free_data_function)Ö0Ïvoid
dbus_connection_set_exit_on_disconnectÌ1024Í(DBusConnection *connection, dbus_bool_t exit_on_disconnect)Ö0Ïvoid
dbus_connection_set_max_message_sizeÌ1024Í(DBusConnection *connection, long size)Ö0Ïvoid
dbus_connection_set_max_received_sizeÌ1024Í(DBusConnection *connection, long size)Ö0Ïvoid
dbus_connection_set_route_peer_messagesÌ1024Í(DBusConnection *connection, dbus_bool_t value)Ö0Ïvoid
dbus_connection_set_timeout_functionsÌ1024Í(DBusConnection *connection, DBusAddTimeoutFunction add_function, DBusRemoveTimeoutFunction remove_function, DBusTimeoutToggledFunction toggled_function, void *data, DBusFreeFunction free_data_function)Ö0Ïdbus_bool_t
dbus_connection_set_unix_user_functionÌ1024Í(DBusConnection *connection, DBusAllowUnixUserFunction function, void *data, DBusFreeFunction free_data_function)Ö0Ïvoid
dbus_connection_set_wakeup_main_functionÌ1024Í(DBusConnection *connection, DBusWakeupMainFunction wakeup_main_function, void *data, DBusFreeFunction free_data_function)Ö0Ïvoid
dbus_connection_set_watch_functionsÌ1024Í(DBusConnection *connection, DBusAddWatchFunction add_function, DBusRemoveWatchFunction remove_function, DBusWatchToggledFunction toggled_function, void *data, DBusFreeFunction free_data_function)Ö0Ïdbus_bool_t
dbus_connection_set_windows_user_functionÌ1024Í(DBusConnection *connection, DBusAllowWindowsUserFunction function, void *data, DBusFreeFunction free_data_function)Ö0Ïvoid
dbus_connection_steal_borrowed_messageÌ1024Í(DBusConnection *connection, DBusMessage *message)Ö0Ïvoid
dbus_connection_try_register_fallbackÌ1024Í(DBusConnection *connection, const char *path, const DBusObjectPathVTable *vtable, void *user_data, DBusError *error)Ö0Ïdbus_bool_t
dbus_connection_try_register_object_pathÌ1024Í(DBusConnection *connection, const char *path, const DBusObjectPathVTable *vtable, void *user_data, DBusError *error)Ö0Ïdbus_bool_t
dbus_connection_unrefÌ1024Í(DBusConnection *connection)Ö0Ïvoid
dbus_connection_unregister_object_pathÌ1024Í(DBusConnection *connection, const char *path)Ö0Ïdbus_bool_t
dbus_error_freeÌ1024Í(DBusError *error)Ö0Ïvoid
dbus_error_has_nameÌ1024Í(const DBusError *error, const char *name)Ö0Ïdbus_bool_t
dbus_error_initÌ1024Í(DBusError *error)Ö0Ïvoid
dbus_error_is_setÌ1024Í(const DBusError *error)Ö0Ïdbus_bool_t
dbus_freeÌ1024Í(void *memory)Ö0Ïvoid
dbus_free_string_arrayÌ1024Í(char **str_array)Ö0Ïvoid
dbus_get_local_machine_idÌ1024Í(void)Ö0Ïchar *
dbus_get_versionÌ1024Í(int *major_version_p, int *minor_version_p, int *micro_version_p)Ö0Ïvoid
dbus_internal_pad1Ì1024Í(void *)ÎDBusObjectPathVTableÖ0Ïvoid
dbus_internal_pad2Ì1024Í(void *)ÎDBusObjectPathVTableÖ0Ïvoid
dbus_internal_pad3Ì1024Í(void *)ÎDBusObjectPathVTableÖ0Ïvoid
dbus_internal_pad4Ì1024Í(void *)ÎDBusObjectPathVTableÖ0Ïvoid
dbus_mallocÌ1024Í(size_t bytes)Ö0Ïvoid *
dbus_malloc0Ì1024Í(size_t bytes)Ö0Ïvoid *
dbus_message_allocate_data_slotÌ1024Í(dbus_int32_t *slot_p)Ö0Ïdbus_bool_t
dbus_message_append_argsÌ1024Í(DBusMessage *message, int first_arg_type, ...)Ö0Ïdbus_bool_t
dbus_message_append_args_valistÌ1024Í(DBusMessage *message, int first_arg_type, va_list var_args)Ö0Ïdbus_bool_t
dbus_message_copyÌ1024Í(const DBusMessage *message)Ö0ÏDBusMessage *
dbus_message_demarshalÌ1024Í(const char *str, int len, DBusError *error)Ö0ÏDBusMessage *
dbus_message_free_data_slotÌ1024Í(dbus_int32_t *slot_p)Ö0Ïvoid
dbus_message_get_argsÌ1024Í(DBusMessage *message, DBusError *error, int first_arg_type, ...)Ö0Ïdbus_bool_t
dbus_message_get_args_valistÌ1024Í(DBusMessage *message, DBusError *error, int first_arg_type, va_list var_args)Ö0Ïdbus_bool_t
dbus_message_get_auto_startÌ1024Í(DBusMessage *message)Ö0Ïdbus_bool_t
dbus_message_get_dataÌ1024Í(DBusMessage *message, dbus_int32_t slot)Ö0Ïvoid *
dbus_message_get_destinationÌ1024Í(DBusMessage *message)Ö0Ïconst char *
dbus_message_get_error_nameÌ1024Í(DBusMessage *message)Ö0Ïconst char *
dbus_message_get_interfaceÌ1024Í(DBusMessage *message)Ö0Ïconst char *
dbus_message_get_memberÌ1024Í(DBusMessage *message)Ö0Ïconst char *
dbus_message_get_no_replyÌ1024Í(DBusMessage *message)Ö0Ïdbus_bool_t
dbus_message_get_pathÌ1024Í(DBusMessage *message)Ö0Ïconst char *
dbus_message_get_path_decomposedÌ1024Í(DBusMessage *message, char ***path)Ö0Ïdbus_bool_t
dbus_message_get_reply_serialÌ1024Í(DBusMessage *message)Ö0Ïdbus_uint32_t
dbus_message_get_senderÌ1024Í(DBusMessage *message)Ö0Ïconst char *
dbus_message_get_serialÌ1024Í(DBusMessage *message)Ö0Ïdbus_uint32_t
dbus_message_get_signatureÌ1024Í(DBusMessage *message)Ö0Ïconst char *
dbus_message_get_typeÌ1024Í(DBusMessage *message)Ö0Ïint
dbus_message_has_destinationÌ1024Í(DBusMessage *message, const char *bus_name)Ö0Ïdbus_bool_t
dbus_message_has_interfaceÌ1024Í(DBusMessage *message, const char *interface)Ö0Ïdbus_bool_t
dbus_message_has_memberÌ1024Í(DBusMessage *message, const char *member)Ö0Ïdbus_bool_t
dbus_message_has_pathÌ1024Í(DBusMessage *message, const char *object_path)Ö0Ïdbus_bool_t
dbus_message_has_senderÌ1024Í(DBusMessage *message, const char *unique_bus_name)Ö0Ïdbus_bool_t
dbus_message_has_signatureÌ1024Í(DBusMessage *message, const char *signature)Ö0Ïdbus_bool_t
dbus_message_is_errorÌ1024Í(DBusMessage *message, const char *error_name)Ö0Ïdbus_bool_t
dbus_message_is_method_callÌ1024Í(DBusMessage *message, const char *interface, const char *method)Ö0Ïdbus_bool_t
dbus_message_is_signalÌ1024Í(DBusMessage *message, const char *interface, const char *signal_name)Ö0Ïdbus_bool_t
dbus_message_iter_append_basicÌ1024Í(DBusMessageIter *iter, int type, const void *value)Ö0Ïdbus_bool_t
dbus_message_iter_append_fixed_arrayÌ1024Í(DBusMessageIter *iter, int element_type, const void *value, int n_elements)Ö0Ïdbus_bool_t
dbus_message_iter_close_containerÌ1024Í(DBusMessageIter *iter, DBusMessageIter *sub)Ö0Ïdbus_bool_t
dbus_message_iter_get_arg_typeÌ1024Í(DBusMessageIter *iter)Ö0Ïint
dbus_message_iter_get_array_lenÌ1024Í(DBusMessageIter *iter)Ö0Ïint
dbus_message_iter_get_basicÌ1024Í(DBusMessageIter *iter, void *value)Ö0Ïvoid
dbus_message_iter_get_element_typeÌ1024Í(DBusMessageIter *iter)Ö0Ïint
dbus_message_iter_get_fixed_arrayÌ1024Í(DBusMessageIter *iter, void *value, int *n_elements)Ö0Ïvoid
dbus_message_iter_get_signatureÌ1024Í(DBusMessageIter *iter)Ö0Ïchar *
dbus_message_iter_has_nextÌ1024Í(DBusMessageIter *iter)Ö0Ïdbus_bool_t
dbus_message_iter_initÌ1024Í(DBusMessage *message, DBusMessageIter *iter)Ö0Ïdbus_bool_t
dbus_message_iter_init_appendÌ1024Í(DBusMessage *message, DBusMessageIter *iter)Ö0Ïvoid
dbus_message_iter_nextÌ1024Í(DBusMessageIter *iter)Ö0Ïdbus_bool_t
dbus_message_iter_open_containerÌ1024Í(DBusMessageIter *iter, int type, const char *contained_signature, DBusMessageIter *sub)Ö0Ïdbus_bool_t
dbus_message_iter_recurseÌ1024Í(DBusMessageIter *iter, DBusMessageIter *sub)Ö0Ïvoid
dbus_message_marshalÌ1024Í(DBusMessage *msg, char **marshalled_data_p, int *len_p)Ö0Ïdbus_bool_t
dbus_message_newÌ1024Í(int message_type)Ö0ÏDBusMessage *
dbus_message_new_errorÌ1024Í(DBusMessage *reply_to, const char *error_name, const char *error_message)Ö0ÏDBusMessage *
dbus_message_new_error_printfÌ1024Í(DBusMessage *reply_to, const char *error_name, const char *error_format, ...)Ö0ÏDBusMessage *
dbus_message_new_method_callÌ1024Í(const char *bus_name, const char *path, const char *interface, const char *method)Ö0ÏDBusMessage *
dbus_message_new_method_returnÌ1024Í(DBusMessage *method_call)Ö0ÏDBusMessage *
dbus_message_new_signalÌ1024Í(const char *path, const char *interface, const char *name)Ö0ÏDBusMessage *
dbus_message_refÌ1024Í(DBusMessage *message)Ö0ÏDBusMessage *
dbus_message_set_auto_startÌ1024Í(DBusMessage *message, dbus_bool_t auto_start)Ö0Ïvoid
dbus_message_set_dataÌ1024Í(DBusMessage *message, dbus_int32_t slot, void *data, DBusFreeFunction free_data_func)Ö0Ïdbus_bool_t
dbus_message_set_destinationÌ1024Í(DBusMessage *message, const char *destination)Ö0Ïdbus_bool_t
dbus_message_set_error_nameÌ1024Í(DBusMessage *message, const char *name)Ö0Ïdbus_bool_t
dbus_message_set_interfaceÌ1024Í(DBusMessage *message, const char *interface)Ö0Ïdbus_bool_t
dbus_message_set_memberÌ1024Í(DBusMessage *message, const char *member)Ö0Ïdbus_bool_t
dbus_message_set_no_replyÌ1024Í(DBusMessage *message, dbus_bool_t no_reply)Ö0Ïvoid
dbus_message_set_pathÌ1024Í(DBusMessage *message, const char *object_path)Ö0Ïdbus_bool_t
dbus_message_set_reply_serialÌ1024Í(DBusMessage *message, dbus_uint32_t reply_serial)Ö0Ïdbus_bool_t
dbus_message_set_senderÌ1024Í(DBusMessage *message, const char *sender)Ö0Ïdbus_bool_t
dbus_message_type_from_stringÌ1024Í(const char *type_str)Ö0Ïint
dbus_message_type_to_stringÌ1024Í(int type)Ö0Ïconst char *
dbus_message_unrefÌ1024Í(DBusMessage *message)Ö0Ïvoid
dbus_move_errorÌ1024Í(DBusError *src, DBusError *dest)Ö0Ïvoid
dbus_newÌ131072Í(type,count)Ö0
dbus_new0Ì131072Í(type,count)Ö0
dbus_parse_addressÌ1024Í(const char *address, DBusAddressEntry ***entry, int *array_len, DBusError *error)Ö0Ïdbus_bool_t
dbus_pending_call_allocate_data_slotÌ1024Í(dbus_int32_t *slot_p)Ö0Ïdbus_bool_t
dbus_pending_call_blockÌ1024Í(DBusPendingCall *pending)Ö0Ïvoid
dbus_pending_call_cancelÌ1024Í(DBusPendingCall *pending)Ö0Ïvoid
dbus_pending_call_free_data_slotÌ1024Í(dbus_int32_t *slot_p)Ö0Ïvoid
dbus_pending_call_get_completedÌ1024Í(DBusPendingCall *pending)Ö0Ïdbus_bool_t
dbus_pending_call_get_dataÌ1024Í(DBusPendingCall *pending, dbus_int32_t slot)Ö0Ïvoid *
dbus_pending_call_refÌ1024Í(DBusPendingCall *pending)Ö0ÏDBusPendingCall *
dbus_pending_call_set_dataÌ1024Í(DBusPendingCall *pending, dbus_int32_t slot, void *data, DBusFreeFunction free_data_func)Ö0Ïdbus_bool_t
dbus_pending_call_set_notifyÌ1024Í(DBusPendingCall *pending, DBusPendingCallNotifyFunction function, void *user_data, DBusFreeFunction free_user_data)Ö0Ïdbus_bool_t
dbus_pending_call_steal_replyÌ1024Í(DBusPendingCall *pending)Ö0ÏDBusMessage *
dbus_pending_call_unrefÌ1024Í(DBusPendingCall *pending)Ö0Ïvoid
dbus_reallocÌ1024Í(void *memory, size_t bytes)Ö0Ïvoid *
dbus_server_allocate_data_slotÌ1024Í(dbus_int32_t *slot_p)Ö0Ïdbus_bool_t
dbus_server_disconnectÌ1024Í(DBusServer *server)Ö0Ïvoid
dbus_server_free_data_slotÌ1024Í(dbus_int32_t *slot_p)Ö0Ïvoid
dbus_server_get_addressÌ1024Í(DBusServer *server)Ö0Ïchar *
dbus_server_get_dataÌ1024Í(DBusServer *server, int slot)Ö0Ïvoid *
dbus_server_get_idÌ1024Í(DBusServer *server)Ö0Ïchar *
dbus_server_get_is_connectedÌ1024Í(DBusServer *server)Ö0Ïdbus_bool_t
dbus_server_listenÌ1024Í(const char *address, DBusError *error)Ö0ÏDBusServer *
dbus_server_refÌ1024Í(DBusServer *server)Ö0ÏDBusServer *
dbus_server_set_auth_mechanismsÌ1024Í(DBusServer *server, const char **mechanisms)Ö0Ïdbus_bool_t
dbus_server_set_dataÌ1024Í(DBusServer *server, int slot, void *data, DBusFreeFunction free_data_func)Ö0Ïdbus_bool_t
dbus_server_set_new_connection_functionÌ1024Í(DBusServer *server, DBusNewConnectionFunction function, void *data, DBusFreeFunction free_data_function)Ö0Ïvoid
dbus_server_set_timeout_functionsÌ1024Í(DBusServer *server, DBusAddTimeoutFunction add_function, DBusRemoveTimeoutFunction remove_function, DBusTimeoutToggledFunction toggled_function, void *data, DBusFreeFunction free_data_function)Ö0Ïdbus_bool_t
dbus_server_set_watch_functionsÌ1024Í(DBusServer *server, DBusAddWatchFunction add_function, DBusRemoveWatchFunction remove_function, DBusWatchToggledFunction toggled_function, void *data, DBusFreeFunction free_data_function)Ö0Ïdbus_bool_t
dbus_server_unrefÌ1024Í(DBusServer *server)Ö0Ïvoid
dbus_set_errorÌ1024Í(DBusError *error, const char *name, const char *message, ...)Ö0Ïvoid
dbus_set_error_constÌ1024Í(DBusError *error, const char *name, const char *message)Ö0Ïvoid
dbus_set_error_from_messageÌ1024Í(DBusError *error, DBusMessage *message)Ö0Ïdbus_bool_t
dbus_shutdownÌ1024Í(void)Ö0Ïvoid
dbus_signature_iter_get_current_typeÌ1024Í(const DBusSignatureIter *iter)Ö0Ïint
dbus_signature_iter_get_element_typeÌ1024Í(const DBusSignatureIter *iter)Ö0Ïint
dbus_signature_iter_get_signatureÌ1024Í(const DBusSignatureIter *iter)Ö0Ïchar *
dbus_signature_iter_initÌ1024Í(DBusSignatureIter *iter, const char *signature)Ö0Ïvoid
dbus_signature_iter_nextÌ1024Í(DBusSignatureIter *iter)Ö0Ïdbus_bool_t
dbus_signature_iter_recurseÌ1024Í(const DBusSignatureIter *iter, DBusSignatureIter *subiter)Ö0Ïvoid
dbus_signature_validateÌ1024Í(const char *signature, DBusError *error)Ö0Ïdbus_bool_t
dbus_signature_validate_singleÌ1024Í(const char *signature, DBusError *error)Ö0Ïdbus_bool_t
dbus_threads_initÌ1024Í(const DBusThreadFunctions *functions)Ö0Ïdbus_bool_t
dbus_threads_init_defaultÌ1024Í(void)Ö0Ïdbus_bool_t
dbus_timeout_get_dataÌ1024Í(DBusTimeout *timeout)Ö0Ïvoid *
dbus_timeout_get_enabledÌ1024Í(DBusTimeout *timeout)Ö0Ïdbus_bool_t
dbus_timeout_get_intervalÌ1024Í(DBusTimeout *timeout)Ö0Ïint
dbus_timeout_handleÌ1024Í(DBusTimeout *timeout)Ö0Ïdbus_bool_t
dbus_timeout_set_dataÌ1024Í(DBusTimeout *timeout, void *data, DBusFreeFunction free_data_function)Ö0Ïvoid
dbus_type_is_basicÌ1024Í(int typecode)Ö0Ïdbus_bool_t
dbus_type_is_containerÌ1024Í(int typecode)Ö0Ïdbus_bool_t
dbus_type_is_fixedÌ1024Í(int typecode)Ö0Ïdbus_bool_t
dbus_unichar_tÌ4096Ö0Ïdbus_uint32_t
dbus_watch_get_dataÌ1024Í(DBusWatch *watch)Ö0Ïvoid *
dbus_watch_get_enabledÌ1024Í(DBusWatch *watch)Ö0Ïdbus_bool_t
dbus_watch_get_fdÌ1024Í(DBusWatch *watch)Ö0Ïint
dbus_watch_get_flagsÌ1024Í(DBusWatch *watch)Ö0Ïunsigned int
dbus_watch_get_socketÌ1024Í(DBusWatch *watch)Ö0Ïint
dbus_watch_get_unix_fdÌ1024Í(DBusWatch *watch)Ö0Ïint
dbus_watch_handleÌ1024Í(DBusWatch *watch, unsigned int flags)Ö0Ïdbus_bool_t
dbus_watch_set_dataÌ1024Í(DBusWatch *watch, void *data, DBusFreeFunction free_data_function)Ö0Ïvoid
DBUS_GERRORÌ65536Ö0
DBUS_GERROR_ACCESS_DENIEDÌ4Îanon_enum_0Ö0
DBUS_GERROR_ADDRESS_IN_USEÌ4Îanon_enum_0Ö0
DBUS_GERROR_AUTH_FAILEDÌ4Îanon_enum_0Ö0
DBUS_GERROR_BAD_ADDRESSÌ4Îanon_enum_0Ö0
DBUS_GERROR_DISCONNECTEDÌ4Îanon_enum_0Ö0
DBUS_GERROR_FAILEDÌ4Îanon_enum_0Ö0
DBUS_GERROR_FILE_EXISTSÌ4Îanon_enum_0Ö0
DBUS_GERROR_FILE_NOT_FOUNDÌ4Îanon_enum_0Ö0
DBUS_GERROR_INVALID_ARGSÌ4Îanon_enum_0Ö0
DBUS_GERROR_INVALID_FILE_CONTENTÌ4Îanon_enum_0Ö0
DBUS_GERROR_INVALID_SIGNATUREÌ4Îanon_enum_0Ö0
DBUS_GERROR_IO_ERRORÌ4Îanon_enum_0Ö0
DBUS_GERROR_LIMITS_EXCEEDEDÌ4Îanon_enum_0Ö0
DBUS_GERROR_MATCH_RULE_INVALIDÌ4Îanon_enum_0Ö0
DBUS_GERROR_MATCH_RULE_NOT_FOUNDÌ4Îanon_enum_0Ö0
DBUS_GERROR_NAME_HAS_NO_OWNERÌ4Îanon_enum_0Ö0
DBUS_GERROR_NOT_SUPPORTEDÌ4Îanon_enum_0Ö0
DBUS_GERROR_NO_MEMORYÌ4Îanon_enum_0Ö0
DBUS_GERROR_NO_NETWORKÌ4Îanon_enum_0Ö0
DBUS_GERROR_NO_REPLYÌ4Îanon_enum_0Ö0
DBUS_GERROR_NO_SERVERÌ4Îanon_enum_0Ö0
DBUS_GERROR_REMOTE_EXCEPTIONÌ4Îanon_enum_0Ö0
DBUS_GERROR_SELINUX_SECURITY_CONTEXT_UNKNOWNÌ4Îanon_enum_0Ö0
DBUS_GERROR_SERVICE_UNKNOWNÌ4Îanon_enum_0Ö0
DBUS_GERROR_SPAWN_CHILD_EXITEDÌ4Îanon_enum_0Ö0
DBUS_GERROR_SPAWN_CHILD_SIGNALEDÌ4Îanon_enum_0Ö0
DBUS_GERROR_SPAWN_EXEC_FAILEDÌ4Îanon_enum_0Ö0
DBUS_GERROR_SPAWN_FAILEDÌ4Îanon_enum_0Ö0
DBUS_GERROR_SPAWN_FORK_FAILEDÌ4Îanon_enum_0Ö0
DBUS_GERROR_TIMED_OUTÌ4Îanon_enum_0Ö0
DBUS_GERROR_TIMEOUTÌ4Îanon_enum_0Ö0
DBUS_GERROR_UNIX_PROCESS_ID_UNKNOWNÌ4Îanon_enum_0Ö0
DBUS_GERROR_UNKNOWN_METHODÌ4Îanon_enum_0Ö0
DBUS_GLIB_CLIENT_WRAPPERS_org_freedesktop_DBusÌ65536Ö0
DBUS_GLIB_CLIENT_WRAPPERS_org_freedesktop_DBus_IntrospectableÌ65536Ö0
DBUS_GLIB_HÌ65536Ö0
DBUS_GLIB_LOWLEVEL_HÌ65536Ö0
DBUS_GOBJECT_TYPE_SPECIALIZED_HÌ65536Ö0
DBUS_G_PROXYÌ131072Í(object)Ö0
DBUS_G_PROXY_CLASSÌ131072Í(klass)Ö0
DBUS_G_PROXY_GET_CLASSÌ131072Í(obj)Ö0
DBUS_INSIDE_DBUS_GLIB_HÌ65536Ö0
DBUS_IS_G_PROXYÌ131072Í(object)Ö0
DBUS_IS_G_PROXY_CLASSÌ131072Í(klass)Ö0
DBUS_TYPE_CONNECTIONÌ65536Ö0
DBUS_TYPE_G_BOOLEAN_ARRAYÌ65536Ö0
DBUS_TYPE_G_CONNECTIONÌ65536Ö0
DBUS_TYPE_G_INT64_ARRAYÌ65536Ö0
DBUS_TYPE_G_INT_ARRAYÌ65536Ö0
DBUS_TYPE_G_MESSAGEÌ65536Ö0
DBUS_TYPE_G_OBJECT_ARRAYÌ65536Ö0
DBUS_TYPE_G_OBJECT_PATHÌ65536Ö0
DBUS_TYPE_G_PROXYÌ65536Ö0
DBUS_TYPE_G_STRING_STRING_HASHTABLEÌ65536Ö0
DBUS_TYPE_G_UCHAR_ARRAYÌ65536Ö0
DBUS_TYPE_G_UINT64_ARRAYÌ65536Ö0
DBUS_TYPE_G_UINT_ARRAYÌ65536Ö0
DBUS_TYPE_MESSAGEÌ65536Ö0
DBUS_TYPE_PENDING_CALLÌ65536Ö0
DBusGAsyncDataÌ4096Ö0Ïanon_struct_6
DBusGConnectionÌ4096Ö0Ï_DBusGConnection
DBusGErrorÌ4096Ö0Ïanon_enum_0
DBusGMessageÌ4096Ö0Ï_DBusGMessage
DBusGMethodInfoÌ4096Ö0Ï_DBusGMethodInfo
DBusGMethodInvocationÌ4096Ö0Ï_DBusGMethodInvocation
DBusGObjectInfoÌ4096Ö0Ï_DBusGObjectInfo
DBusGProxyÌ4096Ö0Ï_DBusGProxy
DBusGProxyCallÌ4096Ö0Ï_DBusGProxyCall
DBusGProxyCallNotifyÌ4096Ö0Ïtypedef void
DBusGProxyClassÌ4096Ö0Ï_DBusGProxyClass
DBusGTypeSpecializedAppendContextÌ4096Ö0Ïanon_struct_1
DBusGTypeSpecializedCollectionAppendFuncÌ4096Ö0Ïtypedef void
DBusGTypeSpecializedCollectionEndAppendFuncÌ4096Ö0Ïtypedef void
DBusGTypeSpecializedCollectionFixedAccessorFuncÌ4096Ö0Ïtypedef gboolean
DBusGTypeSpecializedCollectionIteratorÌ4096Ö0Ïtypedef void
DBusGTypeSpecializedCollectionIteratorFuncÌ4096Ö0Ïtypedef void
DBusGTypeSpecializedCollectionVtableÌ4096Ö0Ïanon_struct_3
DBusGTypeSpecializedConstructorÌ4096Ö0Ïtypedef gpointer
DBusGTypeSpecializedCopyFuncÌ4096Ö0Ïtypedef gpointer
DBusGTypeSpecializedFreeFuncÌ4096Ö0Ïtypedef void
DBusGTypeSpecializedMapAppendFuncÌ4096Ö0Ïtypedef void
DBusGTypeSpecializedMapIteratorÌ4096Ö0Ïtypedef void
DBusGTypeSpecializedMapIteratorFuncÌ4096Ö0Ïtypedef void
DBusGTypeSpecializedMapVtableÌ4096Ö0Ïanon_struct_4
DBusGTypeSpecializedStructGetMemberÌ4096Ö0Ïtypedef gboolean
DBusGTypeSpecializedStructSetMemberÌ4096Ö0Ïtypedef gboolean
DBusGTypeSpecializedStructVtableÌ4096Ö0Ïanon_struct_5
DBusGTypeSpecializedVtableÌ4096Ö0Ïanon_struct_2
dbus_connection_get_g_connectionÌ1024Í(DBusConnection *connection)Ö0ÏDBusGConnection *
dbus_connection_setup_with_g_mainÌ1024Í(DBusConnection *connection, GMainContext *context)Ö0Ïvoid
dbus_g_bus_getÌ1024Í(DBusBusType type, GError **error)Ö0ÏDBusGConnection *
dbus_g_connection_flushÌ1024Í(DBusGConnection *connection)Ö0Ïvoid
dbus_g_connection_get_connectionÌ1024Í(DBusGConnection *gconnection)Ö0ÏDBusConnection *
dbus_g_connection_lookup_g_objectÌ1024Í(DBusGConnection *connection, const char *at_path)Ö0ÏGObject *
dbus_g_connection_openÌ1024Í(const gchar *address, GError **error)Ö0ÏDBusGConnection *
dbus_g_connection_refÌ1024Í(DBusGConnection *connection)Ö0ÏDBusGConnection *
dbus_g_connection_register_g_objectÌ1024Í(DBusGConnection *connection, const char *at_path, GObject *object)Ö0Ïvoid
dbus_g_connection_unrefÌ1024Í(DBusGConnection *connection)Ö0Ïvoid
dbus_g_error_domain_registerÌ1024Í(GQuark domain, const char * default_iface, GType code_enum)Ö0Ïvoid
dbus_g_error_get_nameÌ1024Í(GError *error)Ö0Ïconst char *
dbus_g_error_has_nameÌ1024Í(GError *error, const char *name)Ö0Ïgboolean
dbus_g_error_quarkÌ1024Í(void)Ö0ÏGQuark
dbus_g_message_get_messageÌ1024Í(DBusGMessage *gmessage)Ö0ÏDBusMessage *
dbus_g_message_refÌ1024Í(DBusGMessage *message)Ö0ÏDBusGMessage *
dbus_g_message_unrefÌ1024Í(DBusGMessage *message)Ö0Ïvoid
dbus_g_method_get_replyÌ1024Í(DBusGMethodInvocation *context)Ö0ÏDBusMessage *
dbus_g_method_get_senderÌ1024Í(DBusGMethodInvocation *context)Ö0Ïgchar *
dbus_g_method_returnÌ1024Í(DBusGMethodInvocation *context, ...)Ö0Ïvoid
dbus_g_method_return_errorÌ1024Í(DBusGMethodInvocation *context, GError *error)Ö0Ïvoid
dbus_g_method_send_replyÌ1024Í(DBusGMethodInvocation *context, DBusMessage *reply)Ö0Ïvoid
dbus_g_object_register_marshallerÌ1024Í(GClosureMarshal marshaller, GType rettype, ...)Ö0Ïvoid
dbus_g_object_register_marshaller_arrayÌ1024Í(GClosureMarshal marshaller, GType rettype, guint n_types, const GType* types)Ö0Ïvoid
dbus_g_object_type_install_infoÌ1024Í(GType object_type, const DBusGObjectInfo *info)Ö0Ïvoid
dbus_g_proxy_add_signalÌ1024Í(DBusGProxy *proxy, const char *signal_name, GType first_type, ...)Ö0Ïvoid
dbus_g_proxy_begin_callÌ1024Í(DBusGProxy *proxy, const char *method, DBusGProxyCallNotify notify, gpointer data, GDestroyNotify destroy, GType first_arg_type, ...)Ö0ÏDBusGProxyCall *
dbus_g_proxy_begin_call_with_timeoutÌ1024Í(DBusGProxy *proxy, const char *method, DBusGProxyCallNotify notify, gpointer user_data, GDestroyNotify destroy, int timeout, GType first_arg_type, ...)Ö0ÏDBusGProxyCall *
dbus_g_proxy_callÌ1024Í(DBusGProxy *proxy, const char *method, GError **error, GType first_arg_type, ...)Ö0Ïgboolean
dbus_g_proxy_call_no_replyÌ1024Í(DBusGProxy *proxy, const char *method, GType first_arg_type, ...)Ö0Ïvoid
dbus_g_proxy_call_with_timeoutÌ1024Í(DBusGProxy *proxy, const char *method, int timeout, GError **error, GType first_arg_type, ...)Ö0Ïgboolean
dbus_g_proxy_cancel_callÌ1024Í(DBusGProxy *proxy, DBusGProxyCall *call)Ö0Ïvoid
dbus_g_proxy_connect_signalÌ1024Í(DBusGProxy *proxy, const char *signal_name, GCallback handler, void *data, GClosureNotify free_data_func)Ö0Ïvoid
dbus_g_proxy_disconnect_signalÌ1024Í(DBusGProxy *proxy, const char *signal_name, GCallback handler, void *data)Ö0Ïvoid
dbus_g_proxy_end_callÌ1024Í(DBusGProxy *proxy, DBusGProxyCall *call, GError **error, GType first_arg_type, ...)Ö0Ïgboolean
dbus_g_proxy_get_bus_nameÌ1024Í(DBusGProxy *proxy)Ö0Ïconst char *
dbus_g_proxy_get_interfaceÌ1024Í(DBusGProxy *proxy)Ö0Ïconst char *
dbus_g_proxy_get_pathÌ1024Í(DBusGProxy *proxy)Ö0Ïconst char *
dbus_g_proxy_new_for_nameÌ1024Í(DBusGConnection *connection, const char *name, const char *path, const char *interface)Ö0ÏDBusGProxy *
dbus_g_proxy_new_for_name_ownerÌ1024Í(DBusGConnection *connection, const char *name, const char *path, const char *interface, GError **error)Ö0ÏDBusGProxy *
dbus_g_proxy_new_for_peerÌ1024Í(DBusGConnection *connection, const char *path_name, const char *interface_name)Ö0ÏDBusGProxy *
dbus_g_proxy_new_from_proxyÌ1024Í(DBusGProxy *proxy, const char *interface, const char *path_name)Ö0ÏDBusGProxy *
dbus_g_proxy_sendÌ1024Í(DBusGProxy *proxy, DBusMessage *message, dbus_uint32_t *client_serial)Ö0Ïvoid
dbus_g_proxy_set_default_timeoutÌ1024Í(DBusGProxy *proxy, int timeout)Ö0Ïvoid
dbus_g_proxy_set_interfaceÌ1024Í(DBusGProxy *proxy, const char *interface_name)Ö0Ïvoid
dbus_g_thread_initÌ1024Í(void)Ö0Ïvoid
dbus_g_type_collection_get_fixedÌ1024Í(GValue *value, gpointer *data, guint *len)Ö0Ïgboolean
dbus_g_type_collection_peek_vtableÌ1024Í(GType collection_type)Ö0Ïconst DBusGTypeSpecializedCollectionVtable *
dbus_g_type_collection_value_iterateÌ1024Í(const GValue *value, DBusGTypeSpecializedCollectionIterator iterator, gpointer user_data)Ö0Ïvoid
dbus_g_type_get_collectionÌ1024Í(const char *container, GType specialization)Ö0ÏGType
dbus_g_type_get_collection_specializationÌ1024Í(GType gtype)Ö0ÏGType
dbus_g_type_get_mapÌ1024Í(const char *container, GType key_specialization, GType value_specialization)Ö0ÏGType
dbus_g_type_get_map_key_specializationÌ1024Í(GType gtype)Ö0ÏGType
dbus_g_type_get_map_value_specializationÌ1024Í(GType gtype)Ö0ÏGType
dbus_g_type_get_structÌ1024Í(const char *container, GType first_type, ...)Ö0ÏGType
dbus_g_type_get_struct_member_typeÌ1024Í(GType gtype, guint member)Ö0ÏGType
dbus_g_type_get_struct_sizeÌ1024Í(GType gtype)Ö0Ïguint
dbus_g_type_get_structvÌ1024Í(const char *container, guint num_members, GType *types)Ö0ÏGType
dbus_g_type_is_collectionÌ1024Í(GType gtype)Ö0Ïgboolean
dbus_g_type_is_mapÌ1024Í(GType gtype)Ö0Ïgboolean
dbus_g_type_is_structÌ1024Í(GType gtype)Ö0Ïgboolean
dbus_g_type_map_peek_vtableÌ1024Í(GType map_type)Ö0Ïconst DBusGTypeSpecializedMapVtable *
dbus_g_type_map_value_iterateÌ1024Í(const GValue *value, DBusGTypeSpecializedMapIterator iterator, gpointer user_data)Ö0Ïvoid
dbus_g_type_register_collectionÌ1024Í(const char *name, const DBusGTypeSpecializedCollectionVtable *vtable, guint flags)Ö0Ïvoid
dbus_g_type_register_mapÌ1024Í(const char *name, const DBusGTypeSpecializedMapVtable *vtable, guint flags)Ö0Ïvoid
dbus_g_type_register_structÌ1024Í(const char *name, const DBusGTypeSpecializedStructVtable *vtable, guint flags)Ö0Ïvoid
dbus_g_type_specialized_collection_appendÌ1024Í(DBusGTypeSpecializedAppendContext *ctx, GValue *elt)Ö0Ïvoid
dbus_g_type_specialized_collection_end_appendÌ1024Í(DBusGTypeSpecializedAppendContext *ctx)Ö0Ïvoid
dbus_g_type_specialized_constructÌ1024Í(GType gtype)Ö0Ïgpointer
dbus_g_type_specialized_initÌ1024Í(void)Ö0Ïvoid
dbus_g_type_specialized_init_appendÌ1024Í(GValue *value, DBusGTypeSpecializedAppendContext *ctx)Ö0Ïvoid
dbus_g_type_specialized_map_appendÌ1024Í(DBusGTypeSpecializedAppendContext *ctx, GValue *key, GValue *val)Ö0Ïvoid
dbus_g_type_struct_getÌ1024Í(const GValue *value, guint member, ...)Ö0Ïgboolean
dbus_g_type_struct_get_memberÌ1024Í(const GValue *value, guint member, GValue *dest)Ö0Ïgboolean
dbus_g_type_struct_peek_vtableÌ1024Í(GType struct_type)Ö0Ïconst DBusGTypeSpecializedStructVtable *
dbus_g_type_struct_setÌ1024Í(GValue *value, guint member, ...)Ö0Ïgboolean
dbus_g_type_struct_set_memberÌ1024Í(GValue *value, guint member, const GValue *src)Ö0Ïgboolean
dbus_server_setup_with_g_mainÌ1024Í(DBusServer *server, GMainContext *context)Ö0Ïvoid
dbus_set_g_errorÌ1024Í(GError **gerror, DBusError *derror)Ö0Ïvoid
org_freedesktop_DBus_Introspectable_introspectÌ16Í(DBusGProxy *proxy, char ** OUT_data, GError **error)Ö0Ïgboolean
org_freedesktop_DBus_Introspectable_introspect_asyncÌ16Í(DBusGProxy *proxy, org_freedesktop_DBus_Introspectable_introspect_reply callback, gpointer userdata)Ö0ÏDBusGProxyCall *
org_freedesktop_DBus_Introspectable_introspect_async_callbackÌ16Í(DBusGProxy *proxy, DBusGProxyCall *call, void *user_data)Ö0Ïvoid
org_freedesktop_DBus_Introspectable_introspect_replyÌ4096Ö0Ïtypedef void
org_freedesktop_DBus_add_matchÌ16Í(DBusGProxy *proxy, const char * IN_arg0, GError **error)Ö0Ïgboolean
org_freedesktop_DBus_add_match_asyncÌ16Í(DBusGProxy *proxy, const char * IN_arg0, org_freedesktop_DBus_add_match_reply callback, gpointer userdata)Ö0ÏDBusGProxyCall *
org_freedesktop_DBus_add_match_async_callbackÌ16Í(DBusGProxy *proxy, DBusGProxyCall *call, void *user_data)Ö0Ïvoid
org_freedesktop_DBus_add_match_replyÌ4096Ö0Ïtypedef void
org_freedesktop_DBus_get_connection_se_linux_security_contextÌ16Í(DBusGProxy *proxy, const char * IN_arg0, GArray** OUT_arg1, GError **error)Ö0Ïgboolean
org_freedesktop_DBus_get_connection_se_linux_security_context_asyncÌ16Í(DBusGProxy *proxy, const char * IN_arg0, org_freedesktop_DBus_get_connection_se_linux_security_context_reply callback, gpointer userdata)Ö0ÏDBusGProxyCall *
org_freedesktop_DBus_get_connection_se_linux_security_context_async_callbackÌ16Í(DBusGProxy *proxy, DBusGProxyCall *call, void *user_data)Ö0Ïvoid
org_freedesktop_DBus_get_connection_se_linux_security_context_replyÌ4096Ö0Ïtypedef void
org_freedesktop_DBus_get_connection_unix_process_idÌ16Í(DBusGProxy *proxy, const char * IN_arg0, guint* OUT_arg1, GError **error)Ö0Ïgboolean
org_freedesktop_DBus_get_connection_unix_process_id_asyncÌ16Í(DBusGProxy *proxy, const char * IN_arg0, org_freedesktop_DBus_get_connection_unix_process_id_reply callback, gpointer userdata)Ö0ÏDBusGProxyCall *
org_freedesktop_DBus_get_connection_unix_process_id_async_callbackÌ16Í(DBusGProxy *proxy, DBusGProxyCall *call, void *user_data)Ö0Ïvoid
org_freedesktop_DBus_get_connection_unix_process_id_replyÌ4096Ö0Ïtypedef void
org_freedesktop_DBus_get_connection_unix_userÌ16Í(DBusGProxy *proxy, const char * IN_arg0, guint* OUT_arg1, GError **error)Ö0Ïgboolean
org_freedesktop_DBus_get_connection_unix_user_asyncÌ16Í(DBusGProxy *proxy, const char * IN_arg0, org_freedesktop_DBus_get_connection_unix_user_reply callback, gpointer userdata)Ö0ÏDBusGProxyCall *
org_freedesktop_DBus_get_connection_unix_user_async_callbackÌ16Í(DBusGProxy *proxy, DBusGProxyCall *call, void *user_data)Ö0Ïvoid
org_freedesktop_DBus_get_connection_unix_user_replyÌ4096Ö0Ïtypedef void
org_freedesktop_DBus_get_name_ownerÌ16Í(DBusGProxy *proxy, const char * IN_arg0, char ** OUT_arg1, GError **error)Ö0Ïgboolean
org_freedesktop_DBus_get_name_owner_asyncÌ16Í(DBusGProxy *proxy, const char * IN_arg0, org_freedesktop_DBus_get_name_owner_reply callback, gpointer userdata)Ö0ÏDBusGProxyCall *
org_freedesktop_DBus_get_name_owner_async_callbackÌ16Í(DBusGProxy *proxy, DBusGProxyCall *call, void *user_data)Ö0Ïvoid
org_freedesktop_DBus_get_name_owner_replyÌ4096Ö0Ïtypedef void
org_freedesktop_DBus_helloÌ16Í(DBusGProxy *proxy, char ** OUT_arg0, GError **error)Ö0Ïgboolean
org_freedesktop_DBus_hello_asyncÌ16Í(DBusGProxy *proxy, org_freedesktop_DBus_hello_reply callback, gpointer userdata)Ö0ÏDBusGProxyCall *
org_freedesktop_DBus_hello_async_callbackÌ16Í(DBusGProxy *proxy, DBusGProxyCall *call, void *user_data)Ö0Ïvoid
org_freedesktop_DBus_hello_replyÌ4096Ö0Ïtypedef void
org_freedesktop_DBus_list_activatable_namesÌ16Í(DBusGProxy *proxy, char *** OUT_arg0, GError **error)Ö0Ïgboolean
org_freedesktop_DBus_list_activatable_names_asyncÌ16Í(DBusGProxy *proxy, org_freedesktop_DBus_list_activatable_names_reply callback, gpointer userdata)Ö0ÏDBusGProxyCall *
org_freedesktop_DBus_list_activatable_names_async_callbackÌ16Í(DBusGProxy *proxy, DBusGProxyCall *call, void *user_data)Ö0Ïvoid
org_freedesktop_DBus_list_activatable_names_replyÌ4096Ö0Ïtypedef void
org_freedesktop_DBus_list_namesÌ16Í(DBusGProxy *proxy, char *** OUT_arg0, GError **error)Ö0Ïgboolean
org_freedesktop_DBus_list_names_asyncÌ16Í(DBusGProxy *proxy, org_freedesktop_DBus_list_names_reply callback, gpointer userdata)Ö0ÏDBusGProxyCall *
org_freedesktop_DBus_list_names_async_callbackÌ16Í(DBusGProxy *proxy, DBusGProxyCall *call, void *user_data)Ö0Ïvoid
org_freedesktop_DBus_list_names_replyÌ4096Ö0Ïtypedef void
org_freedesktop_DBus_list_queued_ownersÌ16Í(DBusGProxy *proxy, const char * IN_arg0, char *** OUT_arg1, GError **error)Ö0Ïgboolean
org_freedesktop_DBus_list_queued_owners_asyncÌ16Í(DBusGProxy *proxy, const char * IN_arg0, org_freedesktop_DBus_list_queued_owners_reply callback, gpointer userdata)Ö0ÏDBusGProxyCall *
org_freedesktop_DBus_list_queued_owners_async_callbackÌ16Í(DBusGProxy *proxy, DBusGProxyCall *call, void *user_data)Ö0Ïvoid
org_freedesktop_DBus_list_queued_owners_replyÌ4096Ö0Ïtypedef void
org_freedesktop_DBus_name_has_ownerÌ16Í(DBusGProxy *proxy, const char * IN_arg0, gboolean* OUT_arg1, GError **error)Ö0Ïgboolean
org_freedesktop_DBus_name_has_owner_asyncÌ16Í(DBusGProxy *proxy, const char * IN_arg0, org_freedesktop_DBus_name_has_owner_reply callback, gpointer userdata)Ö0ÏDBusGProxyCall *
org_freedesktop_DBus_name_has_owner_async_callbackÌ16Í(DBusGProxy *proxy, DBusGProxyCall *call, void *user_data)Ö0Ïvoid
org_freedesktop_DBus_name_has_owner_replyÌ4096Ö0Ïtypedef void
org_freedesktop_DBus_release_nameÌ16Í(DBusGProxy *proxy, const char * IN_arg0, guint* OUT_arg1, GError **error)Ö0Ïgboolean
org_freedesktop_DBus_release_name_asyncÌ16Í(DBusGProxy *proxy, const char * IN_arg0, org_freedesktop_DBus_release_name_reply callback, gpointer userdata)Ö0ÏDBusGProxyCall *
org_freedesktop_DBus_release_name_async_callbackÌ16Í(DBusGProxy *proxy, DBusGProxyCall *call, void *user_data)Ö0Ïvoid
org_freedesktop_DBus_release_name_replyÌ4096Ö0Ïtypedef void
org_freedesktop_DBus_reload_configÌ16Í(DBusGProxy *proxy, GError **error)Ö0Ïgboolean
org_freedesktop_DBus_reload_config_asyncÌ16Í(DBusGProxy *proxy, org_freedesktop_DBus_reload_config_reply callback, gpointer userdata)Ö0ÏDBusGProxyCall *
org_freedesktop_DBus_reload_config_async_callbackÌ16Í(DBusGProxy *proxy, DBusGProxyCall *call, void *user_data)Ö0Ïvoid
org_freedesktop_DBus_reload_config_replyÌ4096Ö0Ïtypedef void
org_freedesktop_DBus_remove_matchÌ16Í(DBusGProxy *proxy, const char * IN_arg0, GError **error)Ö0Ïgboolean
org_freedesktop_DBus_remove_match_asyncÌ16Í(DBusGProxy *proxy, const char * IN_arg0, org_freedesktop_DBus_remove_match_reply callback, gpointer userdata)Ö0ÏDBusGProxyCall *
org_freedesktop_DBus_remove_match_async_callbackÌ16Í(DBusGProxy *proxy, DBusGProxyCall *call, void *user_data)Ö0Ïvoid
org_freedesktop_DBus_remove_match_replyÌ4096Ö0Ïtypedef void
org_freedesktop_DBus_request_nameÌ16Í(DBusGProxy *proxy, const char * IN_arg0, const guint IN_arg1, guint* OUT_arg2, GError **error)Ö0Ïgboolean
org_freedesktop_DBus_request_name_asyncÌ16Í(DBusGProxy *proxy, const char * IN_arg0, const guint IN_arg1, org_freedesktop_DBus_request_name_reply callback, gpointer userdata)Ö0ÏDBusGProxyCall *
org_freedesktop_DBus_request_name_async_callbackÌ16Í(DBusGProxy *proxy, DBusGProxyCall *call, void *user_data)Ö0Ïvoid
org_freedesktop_DBus_request_name_replyÌ4096Ö0Ïtypedef void
org_freedesktop_DBus_start_service_by_nameÌ16Í(DBusGProxy *proxy, const char * IN_arg0, const guint IN_arg1, guint* OUT_arg2, GError **error)Ö0Ïgboolean
org_freedesktop_DBus_start_service_by_name_asyncÌ16Í(DBusGProxy *proxy, const char * IN_arg0, const guint IN_arg1, org_freedesktop_DBus_start_service_by_name_reply callback, gpointer userdata)Ö0ÏDBusGProxyCall *
org_freedesktop_DBus_start_service_by_name_async_callbackÌ16Í(DBusGProxy *proxy, DBusGProxyCall *call, void *user_data)Ö0Ïvoid
org_freedesktop_DBus_start_service_by_name_replyÌ4096Ö0Ïtypedef void
