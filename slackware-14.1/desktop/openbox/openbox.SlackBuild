#!/bin/sh

# Heavily based on the Slackware 14.1 SlackBuild

# Written by Loris Vincenzi (info@slacky.it)
# Last build from Loris Vincenzi (info@slacky.it)

# Slackware build script for openbox
# Official Site: http://openbox.org/
# Patches from ...

# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ''AS IS'' AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO
# EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
# Requirements:

set -e

PKGNAME=openbox
VERSION=${VERSION:-3.5.2}
ARCH=${ARCH:-$(uname -m)}
BUILD=${BUILD:-1}
TAG=${TAG:-sl}
SOURCE="http://openbox.org/dist/$PKGNAME/$PKGNAME-$VERSION.tar.gz"
TAR=
DIR=
DOCS="ABOUT-NLS"
SLKFILES="patch.diff file.desktop rc.application.sh"

# Set these to "YES" if you want your package to include a xinitrc file
# for running Openbox in KDE or GNOME, respectively.
# Otherwise, you can add the xinitrc files manually to /etc/X11/xinit and
# the openbox-kde-session and openbox-gnome-session files to /usr/bin.
# The files can be found under /usr/doc/openbox
# Don't forget to make them executable if you copy them from /usr/doc!
#
# This can be specified on the command line when calling the build script:
#   KXINIT=YES ./openbox.SlackBuild
KXINIT=${KXINIT:-YES}
GXINIT=${GXINIT:-YES}

case "$ARCH" in
	  i?86) export ARCH=i486; SLKCFLAGS="-O2 -march=i486 -mtune=i686"; CHOST="i486-slackware-linux" ;;
	x86_64) SLKCFLAGS="-O2 -fPIC"; LIBDIRSUFFIX="64"; CHOST="x86_64-slackware-linux" ;;
	  arm*) export ARCH=arm; SLKCFLAGS="-O2 -march=armv5te"; CHOST="arm-slackware-linux-gnueabi" ;;
		 *) export ARCH=$( uname -m ) ;;
esac

JOBS=${JOBS:--j2}
CWD=$(pwd)
TMP=${TMP:-/tmp/buildpkgs/$PKGNAME}
PKG=$TMP/package-$PKGNAME
OUTPUT=${OUTPUT:-$CWD}
TAR=${TAR:-$(basename $SOURCE)}
DIR=${DIR:-$(echo "$TAR"|sed -r 's/(\.tar|)(.gz|.bz2|.xz|.tgz|)$//')}

if [ ! -e $CWD/$TAR ];then
	wget $SOURCE -O "$CWD/$TAR"
fi

rm -rf $TMP
mkdir -p $TMP $PKG $OUTPUT
cd $TMP
tar xvf $CWD/$TAR
cd $DIR

chown -R root:root .
chmod -R u+w,go+r-w,a-s .

CFLAGS="$CFLAGS $SLKCFLAGS" \
CXXFLAGS="$CXXFLAGS $SLKCFLAGS" \
./configure --prefix=/usr \
--sysconfdir=/etc \
--localstatedir=/var \
--libdir=/usr/lib${LIBDIRSUFFIX} \
--disable-static \
--mandir=/usr/man \
--program-prefix= \
--program-suffix= \
--build=$CHOST
echo -e "\E[0;32mPress any key to build the package!\E[0;0m"
read
make $JOBS
make install DESTDIR=$PKG

# Add xinitrc.openbox so that openbox will show up as an option in xwmconfig
install -D -m 0755 $CWD/xinitrc.openbox $PKG/etc/X11/xinit/xinitrc.openbox

# Add xinitrc.openbox-session so that openbox-session will show up as an option in xwmconfig
install -D -m 0755 $CWD/xinitrc.openbox-session $PKG/etc/X11/xinit/xinitrc.openbox-session

# Optionally install xinitrc scripts for running Openbox in KDE or GNOME
# Move the scripts from /usr/bin if the xinitrc scripts are not installed.
if [ "$KXINIT" == "YES" ]; then
  install -D -m 0755 $CWD/xinitrc.kde-openbox $PKG/etc/X11/xinit/xinitrc.kde-openbox
else
  cat $PKG/usr/bin/openbox-kde-session > $PKG/usr/doc/$PKGNAME-$VERSION/openbox-kde-session
  rm -vf $PKG/usr/bin/openbox-kde-session
fi
if [ "$GXINIT" == "YES" ]; then
  install -D -m 0755 $CWD/xinitrc.gnome-openbox $PKG/etc/X11/xinit/xinitrc.gnome-openbox
else
  cat $PKG/usr/bin/openbox-gnome-session > $PKG/usr/doc/$PKGNAME-$VERSION/openbox-gnome-session
  rm -vf $PKG/usr/bin/openbox-gnome-session
fi

# Change name of openbox.desktop KDM session file so it corresponds to openbox-session
( cd $PKG/usr/share/xsessions
  mv openbox.desktop openbox-session.desktop
  sed -i "s/Name=Openbox/Name=Openbox-Session/" openbox-session.desktop
)

# Create symlinks to KDM session desktop files so KDM will use them
mkdir -p $PKG/usr/share/apps/kdm/sessions
( cd $PKG/usr/share/apps/kdm/sessions
  for i in $PKG/usr/share/xsessions/openbox*.desktop ; do
    ln -s /usr/share/xsessions/$(basename $i) $(basename $i) ;
  done
)

mkdir -p $PKG/usr/doc/$PKGNAME-$VERSION/xinit
for i in $CWD/xinitrc.*openbox* ; do
  cat $i > $PKG/usr/doc/$PKGNAME-$VERSION/xinit/$(basename $i) ;
done

mkdir -p $PKG/usr/doc/$PKGNAME-$VERSION

for DC in $DOCS;do
	[ -e $DC ] && cp -r $DC $PKG/usr/doc/$PKGNAME-$VERSION/ || true
done

mkdir -p $PKG/usr/doc/$PKGNAME-$VERSION/SlackBuild

cp -a $PKG/usr/share/doc/openbox/* $PKG/usr/doc/$PKGNAME-$VERSION
rm -rf $PKG/usr/share/doc
	
cd $CWD
for SB in $PKGNAME.SlackBuild slack-desc doinst.sh doinst.sh.gz EULA.TXT $SLKFILES;do
	[ -e "$SB" ] && cp -r $SB $PKG/usr/doc/$PKGNAME-$VERSION/SlackBuild/$SB || true
done

for i in man info
do
    if [ -d $PKG/usr/$i ]; then
   	cd $PKG/usr/$i
	find . -type f -exec gzip -9 {} \;
	for file in $( find . -type l ) ; do ln -s $( readlink $file ).gz $file.gz ; rm $file ; done
	[ "$i" == "info" ] && rm -f dir.gz
    fi
done

cd $PKG
find . | xargs file | grep "executable" | grep ELF | cut -f 1 -d : | xargs -r strip --strip-unneeded 2> /dev/null || true
find . | xargs file | grep "shared object" | grep ELF | cut -f 1 -d : | xargs -r strip --strip-unneeded 2> /dev/null || true
find . | xargs file | grep "current ar archive" | cut -f 1 -d : | xargs -r strip --strip-unneeded 2> /dev/null || true

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc
[ -e $CWD/doinst.sh ] && cat $CWD/doinst.sh > $PKG/install/doinst.sh
[ -e $CWD/doinst.sh.gz ] && zcat $CWD/doinst.sh.gz > $PKG/install/doinst.sh

cd $PKG
chown -R root:root $PKG

if [ -x "$(which requiredbuilder 2>/dev/null)" ];then
	requiredbuilder -y -v -s $CWD $PKG
	[ -e install/slack-required ] && cat install/slack-required > $PKG/usr/doc/$PKGNAME-$VERSION/SlackBuild/slack-required
fi

/sbin/makepkg -l y -c n $OUTPUT/$PKGNAME-$VERSION-$ARCH-$BUILD$TAG.${PKGTYPE:-txz}

if [ "$1" = "--cleanup" ]; then
	rm -rf $TMP
fi
