#!/bin/sh

# Heavily based on the Slackware 14.1 SlackBuild

# Written by Loris Vincenzi (slacky@slacky.it)
# Last build from Loris Vincenzi (slacky@slacky.it)

# Slackware build script for RealPlayer
# Official Site: http://www.real.com/linux
# Patches from ...

# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ''AS IS'' AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO
# EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
# Requirements:

set -e

PKGNAME=RealPlayer
VERSION=${VERSION:-11.0.2.2315}
ARCH=${ARCH:-$(uname -m)}
BUILD=${BUILD:-3}
TAG=${TAG:-sl}
SOURCE="http://client-software.real.com/free/unix/RealPlayer11GOLD.rpm"
TAR=
DIR=
DOCS=""
SLKFILES=""

case "$ARCH" in
	  i?86) export ARCH=i486; SLKCFLAGS="-O2 -march=i486 -mtune=i686"; CHOST="i486-slackware-linux" ;;
	x86_64) SLKCFLAGS="-O2 -fPIC"; LIBDIRSUFFIX="64"; CHOST="x86_64-slackware-linux" ;;
	  arm*) export ARCH=arm; SLKCFLAGS="-O2 -march=armv5te"; CHOST="arm-slackware-linux-gnueabi" ;;
		 *) export ARCH=$( uname -m ) ;;
esac

JOBS=${JOBS:--j2}
CWD=$(pwd)
TMP=${TMP:-/tmp/buildpkgs/$PKGNAME}
PKG=$TMP/package-$PKGNAME
OUTPUT=${OUTPUT:-$CWD}
TAR=${TAR:-$(basename $SOURCE)}
DIR=${DIR:-$(echo "$TAR"|sed -r 's/(\.tar|)(.gz|.bz2|.xz|.tgz|)$//')}

if [ ! -e $CWD/$TAR ];then
	wget $SOURCE -O "$CWD/$TAR"
fi

rm -rf $TMP
mkdir -p $TMP $PKG $OUTPUT
cd $TMP

rpm2cpio $CWD/RealPlayer11GOLD.rpm | cpio -i --make-directories

chown -R root:root .
chmod -R u+w,go+r-w,a-s .

mkdir -p $PKG/opt
cp -a -r $TMP/opt/* $PKG/opt

mkdir -p $PKG/usr/bin

( cd $PKG/usr/bin
  ln -sf /opt/real/RealPlayer/realplay .
)

install -D -m 0755 ${TMP}/opt/real/RealPlayer/mozilla/nphelix.xpt ${PKG}/usr/lib/mozilla/plugins/nphelix.xpt
install -D -m 0755 ${TMP}/opt/real/RealPlayer/mozilla/nphelix.so  ${PKG}/usr/lib/mozilla/plugins/nphelix.so

  for res in 16 192 32 48; do
    install -d ${PKG}/usr/share/icons/hicolor/${res}x${res}/apps
    cp ${PKG}/opt/real/RealPlayer/share/icons/realplay_${res}x${res}.png \
       ${PKG}/usr/share/icons/hicolor/${res}x${res}/apps/realplay.png
  done
    install -d ${PKG}/usr/share/icons/hicolor/{48x48,192x192}/mimetypes
  for mime in generic ogg ram rpm smil; do
    ln -s /opt/real/RealPlayer/share/icons/mime-application-${mime}_48x48.png \
        ${PKG}/usr/share/icons/hicolor/48x48/mimetypes/realplay-application-${mime}.png
    ln -s /opt/real/RealPlayer/share/icons/mime-application-${mime}_192x192.png \
        ${PKG}/usr/share/icons/hicolor/192x192/mimetypes/realplay-application-${mime}.png
  done
  for mime in aiff au generic ogg wav; do
    ln -s /opt/real/RealPlayer/share/icons/mime-audio-${mime}_48x48.png \
        ${PKG}/usr/share/icons/hicolor/48x48/mimetypes/realplay-audio-${mime}.png
    ln -s /opt/real/RealPlayer/share/icons/mime-audio-${mime}_192x192.png \
        ${PKG}/usr/share/icons/hicolor/192x192/mimetypes/realplay-audio-${mime}.png
  done
    ln -s /opt/real/RealPlayer/share/icons/mime-text-realtext_48x48.png \
        ${PKG}/usr/share/icons/hicolor/48x48/mimetypes/realplay-text-realtext.png
    ln -s /opt/real/RealPlayer/share/icons/mime-text-realtext_192x192.png \
        ${PKG}/usr/share/icons/hicolor/192x192/mimetypes/realplay-text-realtext.png
  for mime in generic ogg; do
    ln -s /opt/real/RealPlayer/share/icons/mime-video-${mime}_48x48.png \
        ${PKG}/usr/share/icons/hicolor/48x48/mimetypes/realplay-video-${mime}.png
    ln -s /opt/real/RealPlayer/share/icons/mime-video-${mime}_192x192.png \
        ${PKG}/usr/share/icons/hicolor/192x192/mimetypes/realplay-video-${mime}.png
  done

  for locale in de es fr hi it ja ko pl pt_BR zh_CN zh_TW; do
    install -d ${PKG}/usr/share/locale/${locale}/LC_MESSAGES
    ln -s /opt/real/RealPlayer/share/locale/${locale}/player.mo \
        ${PKG}/usr/share/locale/${locale}/LC_MESSAGES/realplay.mo
    ln -s /opt/real/RealPlayer/share/locale/${locale}/widget.mo \
        ${PKG}/usr/share/locale/${locale}/LC_MESSAGES/widget.mo
  done

  install -d ${PKG}/usr/share/pixmaps
  ln -s /opt/real/RealPlayer/share/realplay.png ${PKG}/usr/share/pixmaps/realplay.png
  install -D -m 0644 ${PKG}/opt/real/RealPlayer/share/realplay.applications \
                   ${PKG}/usr/share/application-registry/realplay.applications
  install -D -m 0644 ${PKG}/opt/real/RealPlayer/share/realplay.desktop \
                   ${PKG}/usr/share/applications/realplay.desktop
  install -D -m 0644 ${PKG}/opt/real/RealPlayer/share/realplay.keys \
                   ${PKG}/usr/share/mime-info/realplay.keys
  install -D -m 0644 ${PKG}/opt/real/RealPlayer/share/realplay.mime \
                   ${PKG}/usr/share/mime-info/realplay.mime

  install -D -m 0644 ${PKG}/opt/real/RealPlayer/LICENSE ${PKG}/usr/share/licenses/${PKGNAME}/LICENSE

mkdir -p $PKG/usr/doc/$PKGNAME-$VERSION

for DC in $DOCS;do
	[ -e $DC ] && cp -r $DC $PKG/usr/doc/$PKGNAME-$VERSION/ || true
done

mkdir -p $PKG/usr/doc/$PKGNAME-$VERSION/SlackBuild

cd $CWD
for SB in $PKGNAME.SlackBuild slack-desc doinst.sh doinst.sh.gz EULA.TXT $SLKFILES;do
	[ -e "$SB" ] && cp -r $SB $PKG/usr/doc/$PKGNAME-$VERSION/SlackBuild/$SB || true
done

for i in man info
do
    if [ -d $PKG/usr/$i ]; then
   		cd $PKG/usr/$i
		find . -type f -exec gzip -9 {} \;
		for file in $( find . -type l ) ; do ln -s $( readlink $file ).gz $file.gz ; rm $file ; done
		[ "$i" == "info" ] && rm -f dir
    fi
done
	
cd $PKG
find . | xargs file | grep "executable" | grep ELF | cut -f 1 -d : | xargs -r strip --strip-unneeded 2> /dev/null || true
find . | xargs file | grep "shared object" | grep ELF | cut -f 1 -d : | xargs -r strip --strip-unneeded 2> /dev/null || true
find . | xargs file | grep "current ar archive" | cut -f 1 -d : | xargs -r strip --strip-unneeded 2> /dev/null || true

mkdir -p $PKG/install

echo "if [ -x /usr/bin/update-mime-database ]; then
  /usr/bin/update-mime-database /usr/share/mime &> /dev/null
fi" >> $PKG/install/doinst.sh
	echo "" >> $PKG/install/doinst.sh
echo "if [ -x /usr/bin/update-desktop-database ]; then
  /usr/bin/update-desktop-database 1> /dev/null &> /dev/null
fi" >> $PKG/install/doinst.sh
	echo  >> $PKG/install/doinst.sh
	echo "if [ -x /usr/bin/gtk-update-icon-cache ]; then
  /usr/bin/gtk-update-icon-cache  -f -q /usr/share/icons/hicolor &> /dev/null
fi" >> $PKG/install/doinst.sh
	echo  >> $PKG/install/doinst.sh

cat $CWD/slack-desc > $PKG/install/slack-desc
[ -e $CWD/doinst.sh ] && cat $CWD/doinst.sh > $PKG/install/doinst.sh
[ -e $CWD/doinst.sh.gz ] && zcat $CWD/doinst.sh.gz > $PKG/install/doinst.sh

cd $PKG
chown -R root:root $PKG

if [ -x "$(which requiredbuilder 2>/dev/null)" ];then
	requiredbuilder -y -v -s $CWD $PKG # add "-c -b" if you have binary files in /usr/share
	[ -e install/slack-required ] && cat install/slack-required > $PKG/usr/doc/$PKGNAME-$VERSION/SlackBuild/slack-required
fi

/sbin/makepkg -l y -c n $OUTPUT/$PKGNAME-$VERSION-$ARCH-$BUILD$TAG.${PKGTYPE:-txz}

if [ "$1" = "--cleanup" ]; then
	rm -rf $TMP
fi
