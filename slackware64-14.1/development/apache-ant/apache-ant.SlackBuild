#!/bin/sh

# Heavily based on the Slackware 14.1 SlackBuild
# Copyright 2009, 2010, 2011, 2012  Eric Hameleers, Eindhoven, NL
# Copyright 2009, 2010, 2011, 2012  Patrick J. Volkerding, Sebeka, MN, USA
# All rights reserved.

# Written by Eric Hameleers < alien at slackware.com >
# Adapted to portaxxv's standard by miklos < ardutu at gmail dot com >

# Slackware build script for apache-ant
# Official Site: http://ant.apache.org/

# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ''AS IS'' AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO
# EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

# Require:

set -e

# Basic information. 
PKGNAME=apache-ant
VERSION=${VERSION:-1.9.2}
BUILD=${BUILD:-1}
TAG=${TAG:-sl}
ARCH=${ARCH:-$(uname -m)}
DOCS="INSTALL KEYS NOTICE README WHATSNEW manual/" #list of docs to include
SLKFILES= #extra files to include in slackbuild distribution
SOURCE="http://archive.apache.org/dist/ant/binaries/${PKGNAME}-${VERSION}-bin.tar.bz2"
TAR=      # empty = auto
DIR=${PKGNAME}-${VERSION}      # empty = auto

# Automatically determine the architecture we're building on:
case "$ARCH" in
	  i?86) export ARCH=i486; SLKCFLAGS="-O2 -march=i486 -mtune=i686"; CHOST="i486-slackware-linux" ;;
	x86_64) SLKCFLAGS="-O2 -fPIC"; LIBDIRSUFFIX="64"; CHOST="x86_64-slackware-linux" ;;
	  arm*) export ARCH=arm; SLKCFLAGS="-O2 -march=armv5te"; CHOST="arm-slackware-linux-gnueabi" ;;
# Unless $ARCH is already set, use uname -m for all other archs:
		 *) export ARCH=$( uname -m ) ;;
esac

# Does not touch following if not needed
JOBS=${JOBS:--j4}
CWD=$(pwd)
TMP=${TMP:-/tmp/buildpkgs/$PKGNAME}
PKG=$TMP/package-$PKGNAME
OUTPUT=${OUTPUT:-$CWD}
TAR=${TAR:-$(basename $SOURCE)}
DIR=${DIR:-$(echo "$TAR"|sed -r 's/(\.tar|)(.xz|.gz|.bz2|)$//')}

if [ ! -e $CWD/$TAR ];then
  wget $SOURCE -O "$CWD/$TAR"
fi

### Preparing Source
rm -rf $TMP
mkdir -p $TMP $PKG $OUTPUT
cd $TMP
tar xvf $CWD/$TAR
cd $DIR

chown -R root:root .
chmod -R u+w,go+r-w,a-s .

ANT_HOME=/usr/share/ant

mkdir -p $TMP $PKG/usr/share/{ant,java} $PKG/usr/bin
cp -a bin lib etc $PKG/$ANT_HOME/
rm -f $PKG/$ANT_HOME/lib/x*jar

mkdir -p $PKG/etc/profile.d/
cat << EOF > $PKG/etc/profile.d/$PKGNAME.csh
#!/bin/csh
setenv ANT_HOME ${ANT_HOME}
EOF
cat << EOF > $PKG/etc/profile.d/$PKGNAME.sh
#!/bin/sh
export ANT_HOME=${ANT_HOME}
EOF
chmod 0755 $PKG/etc/profile.d/*

cd $PKG/usr/share/java
  for jar in $PKG/$ANT_HOME/lib/*.jar ; do
    ln -s $ANT_HOME/lib/$(basename $jar) $(basename $jar)
  done
cd -

cd $PKG/usr/bin
  ln -s $ANT_HOME/bin/ant
  ln -s $ANT_HOME/bin/antRun
  ln -s $ANT_HOME/bin/antRun.pl
  ln -s $ANT_HOME/bin/runant.pl
  ln -s $ANT_HOME/bin/runant.py
cd -

# Documentation
mkdir -p $PKG/usr/doc/$PKGNAME-$VERSION
for DC in $DOCS;do
	[ -e $DC ] && cp -r $DC $PKG/usr/doc/$PKGNAME-$VERSION/ || true
done

# SlackBuild
mkdir -p $PKG/usr/doc/$PKGNAME-$VERSION/SlackBuild
cd $CWD
for SB in $PKGNAME.SlackBuild slack-desc doinst.sh doinst.sh.gz EULA.TXT $SLKFILES;do
  [ -e $SB ]&&cp -r $SB $PKG/usr/doc/$PKGNAME-$VERSION/SlackBuild/$SB
done

for i in man info
do
    if [ -d $PKG/usr/$i ]; then
   		cd $PKG/usr/$i
		find . -type f -exec gzip -9 {} \;
		for file in $( find . -type l ) ; do ln -s $( readlink $file ).gz $file.gz ; rm $file ; done
		[ "$i" == "info" ] && rm -f dir
    fi
done

( cd $PKG
  find . | xargs file | grep "executable" | grep ELF | cut -f 1 -d : | xargs -r strip --strip-unneeded 2> /dev/null || true
  find . | xargs file | grep "shared object" | grep ELF | cut -f 1 -d : | xargs -r strip --strip-unneeded 2> /dev/null || true
  find . | xargs file | grep "current ar archive" | cut -f 1 -d : | xargs -r strip --strip-unneeded 2> /dev/null || true
)

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc
[ -e $CWD/doinst.sh ] && cat $CWD/doinst.sh > $PKG/install/doinst.sh
[ -e $CWD/doinst.sh.gz ] && zcat $CWD/doinst.sh.gz > $PKG/install/doinst.sh

cd $PKG
chown -R root:root $PKG

if [ -x "$(which requiredbuilder 2>/dev/null)" ];then
  requiredbuilder -y -v -c -b -s  $CWD $PKG
  [ -e install/slack-required ]&&cat install/slack-required > $PKG/usr/doc/$PKGNAME-$VERSION/SlackBuild/slack-required
fi

/sbin/makepkg -l y -c n $OUTPUT/$PKGNAME-$VERSION-$ARCH-$BUILD$TAG.${PKGTYPE:-txz}

if [ "$1" = "--cleanup" ]; then
  rm -rf $TMP
fi


