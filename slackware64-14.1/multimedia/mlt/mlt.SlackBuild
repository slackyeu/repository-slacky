#!/bin/sh

# Heavily based on the Slackware 14.1 SlackBuild

# Written by Andrea Sciucca ( gohanz AT infinito.it )
# Last build from 6c33c ( seic33c [at] gmail [dot] com )

# Slackware build script for mlt
# Official Site: http://mltframework.org/

# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ''AS IS'' AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO
# EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#

set -e

PKGNAME=mlt
VERSION=${VERSION:-0.9.0}
BUILD=${BUILD:-3}
TAG=${TAG:-sl}
ARCH=${ARCH:-x86_64}
SOURCE="http://sourceforge.net/projects/mlt/files/mlt/mlt-$VERSION.tar.gz"
TAR=
DIR=
DOCS="AUTHORS ChangeLog NEWS COPYING README GPL"

PYTHON=yes
RUBY=yes

# If EULA
if [ -e EULA.TXT ];then
  more EULA.TXT
  echo "Do you accept terms? (yes/[no])"
  read ACCEPT
  if [ "$ACCEPT" != "yes" ];then
    echo; echo "SlackBuild Aborted!!"
    exit 1
  fi
fi

# Does not touch following if not needed
CWD=$(pwd)
TMP=${TMP:-/tmp/buildpkgs/$PKGNAME}
PKG=$TMP/package-$PKGNAME
OUTPUT=${OUTPUT:-$CWD}
TAR=${TAR:-$(basename $SOURCE)}
DIR=${DIR:-$(echo "$TAR"|sed -r 's/(\.tar|)(.gz|.bz2|)$//')}

if [ ! -e $CWD/$TAR ];then
  wget $SOURCE
fi

CHOST="i486"
if [ "$ARCH" = "i486" ]; then
  SLKCFLAGS="-O2 -march=i486 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "i586" ]; then
  SLKCFLAGS="-O2 -march=i586 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"
  LIBDIRSUFFIX="64"
  CHOST="x86_64"
fi

rm -rf $TMP
mkdir -p $TMP $PKG $OUTPUT
cd $TMP
tar xvf $CWD/$TAR
cd $DIR

# SWIG Languages:
if [ "${JAVA:-no}" =  "yes" ]; then java="java"; else java=""; fi
if [ "${LUA:-no}" = "yes" ]; then lua="lua"; else lua=""; fi
if [ "${PERL:-no}" = "yes" ]; then perl="perl"; else perl=""; fi
if [ "${PHP:-no}" = "yes" ]; then php="php"; else php=""; fi
if [ "${PYTHON:-no}" = "yes" ]; then python="python"; else python=""; fi
if [ "${RUBY:-no}" = "yes" ]; then ruby="ruby"; else ruby=""; fi
if [ "${TCL:-no}" = "yes" ]; then tcl="tcl"; else tcl=""; fi


chown -R root:root .
chmod -R u+w,go+r-w,a-s .

CFLAGS="$SLKCFLAGS" \
CXXFLAGS="$SLKCFLAGS" \
./configure \
  --prefix=/usr \
  --libdir=/usr/lib$LIBDIRSUFFIX \
  --sysconfdir=/etc \
  --localstatedir=/var \
  --mandir=/usr/man \
  --docdir=/usr/doc/$PKGNAME-$VERSION \
  --qimage-libdir=${QT4DIR}/qt/lib \
  --qimage-includedir=${QT4DIR}/qt/include \
  --enable-gpl \
  --avformat-swscale \
  --luma-compress \
  --enable-motion-est \
  --swig-languages="$java $lua $perl $php $python $ruby $tcl" \
  --build=$CHOST-slackware-linux
CFLAGS="$SLKCFLAGS" CXXFLAGS="$SLKCFLAGS" make
make install DESTDIR=$PKG

if [ "$PYTHON" = "yes" ]; then
  mkdir -p $PKG/usr/lib$LIBDIRSUFFIX/python2.7/site-packages
  install -m0755 src/swig/python/mlt.py $PKG/usr/lib$LIBDIRSUFFIX/python2.7/site-packages/
  install -m0755 src/swig/python/mlt_wrap.o $PKG/usr/lib$LIBDIRSUFFIX/python2.7/site-packages/
  install -m0755 src/swig/python/_mlt.so $PKG/usr/lib$LIBDIRSUFFIX/python2.7/site-packages/
fi

if [ "$RUBY" = "yes" ]; then
  mkdir -p $PKG/usr/lib$LIBDIRSUFFIX/ruby/site_ruby/1.9.1/$ARCH-linux
  install -m0755 src/swig/ruby/$PKGNAME.so $PKG/usr/lib$LIBDIRSUFFIX/ruby/site_ruby/1.9.1/$ARCH-linux/
fi

mkdir -p $PKG/usr/doc/$PKGNAME-$VERSION
cp -r $DOCS $PKG/usr/doc/$PKGNAME-$VERSION
 
mkdir -p $PKG/usr/doc/$PKGNAME-$VERSION/SlackBuild
cd $CWD
for SB in $PKGNAME.SlackBuild slack-desc doinst.sh doinst.sh.gz EULA.TXT $SLKFILES;do
  [ -e $SB ]&&cp -r $SB $PKG/usr/doc/$PKGNAME-$VERSION/SlackBuild/$SB
done

if [ -d $PKG/usr/man ]; then
    ( cd $PKG/usr/man
      find . -type f -exec gzip -9 {} \;
      for i in $( find . -type l ) ; do ln -s $( readlink $i ).gz $i.gz ; rm $i ; done
    )
fi

( cd $PKG
  find . | xargs file | grep "executable" | grep ELF | cut -f 1 -d : | xargs -r strip --strip-unneeded 2> /dev/null || true
  find . | xargs file | grep "shared object" | grep ELF | cut -f 1 -d : | xargs -r strip --strip-unneeded 2> /dev/null || true
  find . | xargs file | grep "current ar archive" | cut -f 1 -d : | xargs -r strip --strip-unneeded 2> /dev/null || true
)

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc
[ -e $CWD/doinst.sh ] && cat $CWD/doinst.sh > $PKG/install/doinst.sh
[ -e $CWD/doinst.sh.gz ] && zcat $CWD/doinst.sh.gz > $PKG/install/doinst.sh

cd $PKG
chown -R root:root $PKG

if [ -x /usr/bin/requiredbuilder ];then
ADD=$(ls /var/log/packages/ | sed -ne 's/\(frei0r\)-\([^-]\+-[^-]\+-[^-]\+\)/\1 >= \2,/p' \
-e 's/\(ladspa_sdk\)-\([^-]\+-[^-]\+-[^-]\+\)/\1 >= \2/p') \
requiredbuilder -y -v -s  $CWD $PKG
fi
 
/sbin/makepkg -l y -c n $OUTPUT/$PKGNAME-$VERSION-$ARCH-$BUILD$TAG.${PKGTYPE:-txz}
 
if [ "$1" = "--cleanup" ]; then
  rm -rf $TMP
fi
