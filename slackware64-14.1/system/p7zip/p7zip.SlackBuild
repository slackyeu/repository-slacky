#!/bin/sh

# Heavily based on the Slackware 14.1 SlackBuild

# Written by Loris Vincenzi ( http://www.slacky.eu )
# Last build from miklos < ardutu at gmail dot com >

# Slackware build script for p7zip
# Official Site: http://p7zip.sourceforge.net
# Patches from http://data.gpo.zugaina.org/

# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ''AS IS'' AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO
# EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
# Requires: wxWidgets 

set -e

PKGNAME=p7zip
VERSION=${VERSION:-9.20.1}
BUILD=${BUILD:-1}
TAG=${TAG:-sl}
ARCH=${ARCH:-$(uname -m)}
SOURCE="http://downloads.sourceforge.net/$PKGNAME/${PKGNAME}_${VERSION}_src_all.tar.bz2"
TAR=${PKGNAME}_${VERSION}_src_all.tar.bz2
DIR=${PKGNAME}_${VERSION}
DOCS="TODO contrib/gzip-like_CLI_wrapper_for_7z/README"
SLKFILES="" 
GUI=${GUI:-no}

# Automatically determine the architecture we're building on:
case "$ARCH" in
	  i?86) export ARCH=i486; SLKCFLAGS="-O2 -march=i486 -mtune=i686"; CHOST="i486-slackware-linux" ;;
	x86_64) SLKCFLAGS="-O2 -fPIC"; LIBDIRSUFFIX="64"; CHOST="x86_64-slackware-linux" ;;
	  arm*) export ARCH=arm; SLKCFLAGS="-O2 -march=armv5te"; CHOST="arm-slackware-linux-gnueabi" ;;
# Unless $ARCH is already set, use uname -m for all other archs:
		 *) export ARCH=$( uname -m ) ;;
esac

JOBS=${JOBS:--j2}
CWD=$(pwd)
TMP=${TMP:-/tmp/buildpkgs/$PKGNAME}
PKG=$TMP/package-$PKGNAME
OUTPUT=${OUTPUT:-$CWD}
TAR=${TAR:-$(basename $SOURCE)}
DIR=${DIR:-$(echo "$TAR"|sed -r 's/(\.tar|)(.gz|.bz2|.xz|)$//')}

if [ ! -e $CWD/$TAR ];then
  wget $SOURCE -O "$CWD/$TAR"
fi

rm -rf $TMP
mkdir -p $TMP $PKG $OUTPUT
cd $TMP
tar xvf $CWD/$TAR
cd $DIR

if [ "${ARCH}" = "x86_64" ] ;then
  cp -f makefile.linux_amd64_asm makefile.machine || exit 1
fi
if [ "${ARCH}" = "i486" ] ;then
  cp -f makefile.linux_x86_asm_gcc_4.X makefile.machine || exit 1
fi
if [ "${ARCH}" = "arm" ] ;then
  cp -f makefile.linux_cross_arm makefile.machine || exit 1
fi

chown -R root:root .
chmod -R u+w,go+r-w,a-s .

make all3 \
  OPTFLAGS="-Wall $CFLAGS ${SLKCFLAGS} -fPIC" \
  DEST_HOME=/usr \
  DEST_BIN=/usr/bin \
  DEST_SHARE=/usr/libexec/$PKGNAME \
  DEST_MAN=/usr/man

sed -i "s|/usr/lib/|/usr/lib$LIBDIRSUFFIX/|g" CPP/7zip/UI/GUI/makefile.depend

if [ "$GUI" = "yes" ]; then
    sed -i "s|/usr/lib/|/usr/lib$LIBDIRSUFFIX/|g" CPP/7zip/UI/GUI/makefile.depend
    make 7zG \
    OPTFLAGS="$CFLAGS $SLKCFLAGS" \
    DEST_HOME=/usr \
    DEST_SHARE_DOC=/usr/doc/$PRGNAM-$VERSION \
    DEST_SHARE=/usr/lib$LIBDIRSUFFIX/p7zip \
    DEST_DIR=$PKG
fi

make install \
  DEST_DIR=${PKG} \
  DEST_HOME=/usr \
  DEST_BIN=/usr/bin \
  DEST_SHARE=/usr/libexec/$PKGNAME \
  DEST_MAN=/usr/man

install -pm0755 contrib/gzip-like_CLI_wrapper_for_7z/p7zip \
  $PKG/usr/bin/7zg
install -m 0644 contrib/gzip-like_CLI_wrapper_for_7z/man1/p7zip.1 \
  $PKG/usr/man/man1/7zg.1
rm -rf contrib/gzip-like_CLI_wrapper_for_7z/{check,p7zip,man1}

mkdir -p $PKG/usr/share/mc/extfs/
install -m 755 contrib/VirtualFileSystemForMidnightCommander/u7z \
          $PKG/usr/share/mc/extfs/

# Documentation
mkdir -p $PKG/usr/doc/$PKGNAME-$VERSION
for DC in $DOCS;do
	[ -e $DC ] && cp -r $DC $PKG/usr/doc/$PKGNAME-$VERSION/ || true
done
 
mkdir -p $PKG/usr/doc/$PKGNAME-$VERSION/SlackBuild
cd $CWD
for SB in $PKGNAME.SlackBuild slack-desc doinst.sh doinst.sh.gz EULA.TXT $SLKFILES;do
  [ -e $SB ]&&cp -r $SB $PKG/usr/doc/$PKGNAME-$VERSION/SlackBuild/$SB
done

for i in man info
do
    if [ -d $PKG/usr/$i ]; then
   		cd $PKG/usr/$i
		find . -type f -exec gzip -9 {} \;
		for file in $( find . -type l ) ; do ln -s $( readlink $file ).gz $file.gz ; rm $file ; done
		[ "$i" == "info" ] && rm -f dir
    fi
done

( cd $PKG
  find . | xargs file | grep "executable" | grep ELF | cut -f 1 -d : | xargs -r strip --strip-unneeded 2> /dev/null || true
  find . | xargs file | grep "shared object" | grep ELF | cut -f 1 -d : | xargs -r strip --strip-unneeded 2> /dev/null || true
  find . | xargs file | grep "current ar archive" | cut -f 1 -d : | xargs -r strip --strip-unneeded 2> /dev/null || true
)

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc
[ -e $CWD/doinst.sh ] && cat $CWD/doinst.sh > $PKG/install/doinst.sh
[ -e $CWD/doinst.sh.gz ] && zcat $CWD/doinst.sh.gz > $PKG/install/doinst.sh

cd $PKG
chown -R root:root $PKG

if [ -x "$(which requiredbuilder 2>/dev/null)" ];then
  requiredbuilder -y -v -s $CWD $PKG
  [ -e install/slack-required ]&&cat install/slack-required > $PKG/usr/doc/$PKGNAME-$VERSION/SlackBuild/slack-required
fi

/sbin/makepkg -l y -c n $OUTPUT/$PKGNAME-$VERSION-$ARCH-$BUILD$TAG.${PKGTYPE:-txz}

if [ "$1" = "--cleanup" ]; then
  rm -rf $TMP
fi


